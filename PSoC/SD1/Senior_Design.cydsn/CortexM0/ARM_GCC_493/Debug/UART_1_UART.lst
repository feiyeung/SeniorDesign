ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_UartInit, %function
  23              	UART_1_UartInit:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\UART_1_UART.c"
   1:Generated_Source\PSoC4/UART_1_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_1_UART.c **** * \file UART_1_UART.c
   3:Generated_Source\PSoC4/UART_1_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_1_UART.c **** *
   5:Generated_Source\PSoC4/UART_1_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_1_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_1_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_1_UART.c **** *
   9:Generated_Source\PSoC4/UART_1_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_1_UART.c **** *
  11:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_1_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_1_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_1_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_1_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_1_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_1_UART.c **** 
  19:Generated_Source\PSoC4/UART_1_UART.c **** #include "UART_1_PVT.h"
  20:Generated_Source\PSoC4/UART_1_UART.c **** #include "UART_1_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_1_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_1_UART.c **** 
  23:Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_WAKE_ENABLE_CONST && UART_1_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_1_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_1_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_1_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_1_UART.c ****     */
  28:Generated_Source\PSoC4/UART_1_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_1_UART.c ****     * functionality when UART_1_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_1_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:Generated_Source\PSoC4/UART_1_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_1_UART.c ****     */
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 2


  33:Generated_Source\PSoC4/UART_1_UART.c ****     uint8 UART_1_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_1_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_WAKE_ENABLE_CONST && UART_1_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_1_UART.c **** 
  37:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_1_UART.c **** 
  39:Generated_Source\PSoC4/UART_1_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_1_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_1_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_1_UART.c **** 
  43:Generated_Source\PSoC4/UART_1_UART.c ****     const UART_1_UART_INIT_STRUCT UART_1_configUart =
  44:Generated_Source\PSoC4/UART_1_UART.c ****     {
  45:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_1_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_1_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_1_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_1_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_1_UART.c ****         (uint32) UART_1_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RTS_FIFO_LEVEL
  76:Generated_Source\PSoC4/UART_1_UART.c ****     };
  77:Generated_Source\PSoC4/UART_1_UART.c **** 
  78:Generated_Source\PSoC4/UART_1_UART.c **** 
  79:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
  80:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartInit
  81:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
  82:Generated_Source\PSoC4/UART_1_UART.c ****     *
  83:Generated_Source\PSoC4/UART_1_UART.c ****     *  Configures the UART_1 for UART operation.
  84:Generated_Source\PSoC4/UART_1_UART.c ****     *
  85:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is intended specifically to be used when the UART_1
  86:Generated_Source\PSoC4/UART_1_UART.c ****     *  configuration is set to “Unconfigured UART_1” in the customizer.
  87:Generated_Source\PSoC4/UART_1_UART.c ****     *  After initializing the UART_1 in UART mode using this function,
  88:Generated_Source\PSoC4/UART_1_UART.c ****     *  the component can be enabled using the UART_1_Start() or
  89:Generated_Source\PSoC4/UART_1_UART.c ****     * UART_1_Enable() function.
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 3


  90:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:Generated_Source\PSoC4/UART_1_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:Generated_Source\PSoC4/UART_1_UART.c ****     *  be provided by the customizer settings.
  93:Generated_Source\PSoC4/UART_1_UART.c ****     *
  94:Generated_Source\PSoC4/UART_1_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:Generated_Source\PSoC4/UART_1_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:Generated_Source\PSoC4/UART_1_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:Generated_Source\PSoC4/UART_1_UART.c ****     *
  98:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
  99:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartInit(const UART_1_UART_INIT_STRUCT *config)
 100:Generated_Source\PSoC4/UART_1_UART.c ****     {
 101:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 pinsConfig;
 102:Generated_Source\PSoC4/UART_1_UART.c **** 
 103:Generated_Source\PSoC4/UART_1_UART.c ****         if (NULL == config)
 104:Generated_Source\PSoC4/UART_1_UART.c ****         {
 105:Generated_Source\PSoC4/UART_1_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:Generated_Source\PSoC4/UART_1_UART.c ****         }
 107:Generated_Source\PSoC4/UART_1_UART.c ****         else
 108:Generated_Source\PSoC4/UART_1_UART.c ****         {
 109:Generated_Source\PSoC4/UART_1_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig  = config->direction;
 111:Generated_Source\PSoC4/UART_1_UART.c **** 
 112:Generated_Source\PSoC4/UART_1_UART.c ****         #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 113:Generated_Source\PSoC4/UART_1_UART.c ****             /* Add RTS and CTS pins to configure */
 114:Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_1_UART_RTS_PIN_ENABLE) : (0u);
 115:Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_1_UART_CTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 117:Generated_Source\PSoC4/UART_1_UART.c **** 
 118:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure pins */
 119:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SetPins(UART_1_SCB_MODE_UART, config->mode, pinsConfig);
 120:Generated_Source\PSoC4/UART_1_UART.c **** 
 121:Generated_Source\PSoC4/UART_1_UART.c ****             /* Store internal configuration */
 122:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbMode       = (uint8) UART_1_SCB_MODE_UART;
 123:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbEnableWake = (uint8) config->enableWake;
 124:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbEnableIntr = (uint8) config->enableInterrupt;
 125:Generated_Source\PSoC4/UART_1_UART.c **** 
 126:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set RX direction internal variables */
 127:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBuffer      =         config->rxBuffer;
 128:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxDataBits    = (uint8) config->dataBits;
 129:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferSize  = (uint8) config->rxBufferSize;
 130:Generated_Source\PSoC4/UART_1_UART.c **** 
 131:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set TX direction internal variables */
 132:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBuffer      =         config->txBuffer;
 133:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txDataBits    = (uint8) config->dataBits;
 134:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferSize  = (uint8) config->txBufferSize;
 135:Generated_Source\PSoC4/UART_1_UART.c **** 
 136:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure UART interface */
 137:Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_MODE_IRDA == config->mode)
 138:Generated_Source\PSoC4/UART_1_UART.c ****             {
 139:Generated_Source\PSoC4/UART_1_UART.c ****                 /* OVS settings: IrDA */
 140:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:Generated_Source\PSoC4/UART_1_UART.c ****                                                 (UART_1_UART_GET_CTRL_OVS_IRDA_LP(config->oversampl
 142:Generated_Source\PSoC4/UART_1_UART.c ****                                                 (UART_1_CTRL_OVS_IRDA_OVS16));
 143:Generated_Source\PSoC4/UART_1_UART.c ****             }
 144:Generated_Source\PSoC4/UART_1_UART.c ****             else
 145:Generated_Source\PSoC4/UART_1_UART.c ****             {
 146:Generated_Source\PSoC4/UART_1_UART.c ****                 /* OVS settings: UART and SmartCard */
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 4


 147:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_CTRL_REG  = UART_1_GET_CTRL_OVS(config->oversample);
 148:Generated_Source\PSoC4/UART_1_UART.c ****             }
 149:Generated_Source\PSoC4/UART_1_UART.c **** 
 150:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_CTRL_REG     |= UART_1_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:Generated_Source\PSoC4/UART_1_UART.c ****                                              UART_1_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAdd
 152:Generated_Source\PSoC4/UART_1_UART.c ****                                              UART_1_CTRL_UART;
 153:Generated_Source\PSoC4/UART_1_UART.c **** 
 154:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_CTRL_REG = UART_1_GET_UART_CTRL_MODE(config->mode);
 156:Generated_Source\PSoC4/UART_1_UART.c **** 
 157:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure RX direction */
 158:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_RX_CTRL_REG = UART_1_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx) 
 160:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)   
 161:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPa
 162:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFra
 163:Generated_Source\PSoC4/UART_1_UART.c **** 
 164:Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_PARITY_NONE != config->parity)
 165:Generated_Source\PSoC4/UART_1_UART.c ****             {
 166:Generated_Source\PSoC4/UART_1_UART.c ****                UART_1_UART_RX_CTRL_REG |= UART_1_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:Generated_Source\PSoC4/UART_1_UART.c ****                                                     UART_1_UART_RX_CTRL_PARITY_ENABLED;
 168:Generated_Source\PSoC4/UART_1_UART.c ****             }
 169:Generated_Source\PSoC4/UART_1_UART.c **** 
 170:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_CTRL_REG      = UART_1_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_RX_CTRL_MEDIAN(config->enableMedianFilte
 172:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:Generated_Source\PSoC4/UART_1_UART.c **** 
 174:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_FIFO_CTRL_REG = UART_1_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel)
 175:Generated_Source\PSoC4/UART_1_UART.c **** 
 176:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure MP address */
 177:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_MATCH_REG     = UART_1_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_RX_MATCH_MASK(config->multiprocAddrMask)
 179:Generated_Source\PSoC4/UART_1_UART.c **** 
 180:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure RX direction */
 181:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_TX_CTRL_REG = UART_1_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_TX_CTRL_RETRY_NACK(config->enableRe
 183:Generated_Source\PSoC4/UART_1_UART.c **** 
 184:Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_PARITY_NONE != config->parity)
 185:Generated_Source\PSoC4/UART_1_UART.c ****             {
 186:Generated_Source\PSoC4/UART_1_UART.c ****                UART_1_UART_TX_CTRL_REG |= UART_1_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:Generated_Source\PSoC4/UART_1_UART.c ****                                                     UART_1_UART_TX_CTRL_PARITY_ENABLED;
 188:Generated_Source\PSoC4/UART_1_UART.c ****             }
 189:Generated_Source\PSoC4/UART_1_UART.c **** 
 190:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_TX_CTRL_REG      = UART_1_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:Generated_Source\PSoC4/UART_1_UART.c **** 
 193:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_TX_FIFO_CTRL_REG = UART_1_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel)
 194:Generated_Source\PSoC4/UART_1_UART.c **** 
 195:Generated_Source\PSoC4/UART_1_UART.c ****         #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 196:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG = UART_1_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPola
 198:Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPola
 199:Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFi
 200:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 201:Generated_Source\PSoC4/UART_1_UART.c **** 
 202:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntDisable    (UART_1_ISR_NUMBER);
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 5


 204:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntSetPriority(UART_1_ISR_NUMBER, UART_1_ISR_PRIORITY);
 205:Generated_Source\PSoC4/UART_1_UART.c ****             (void) CyIntSetVector(UART_1_ISR_NUMBER, &UART_1_SPI_UART_ISR);
 206:Generated_Source\PSoC4/UART_1_UART.c **** 
 207:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure WAKE interrupt */
 208:Generated_Source\PSoC4/UART_1_UART.c ****         #if(UART_1_UART_RX_WAKEUP_IRQ)
 209:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntDisable    (UART_1_RX_WAKE_ISR_NUMBER);
 210:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntSetPriority(UART_1_RX_WAKE_ISR_NUMBER, UART_1_RX_WAKE_ISR_PRIORITY);
 211:Generated_Source\PSoC4/UART_1_UART.c ****             (void) CyIntSetVector(UART_1_RX_WAKE_ISR_NUMBER, &UART_1_UART_WAKEUP_ISR);
 212:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_UART_RX_WAKEUP_IRQ) */
 213:Generated_Source\PSoC4/UART_1_UART.c **** 
 214:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure interrupt sources */
 215:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_I2C_EC_MASK_REG = UART_1_NO_INTR_SOURCES;
 216:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_SPI_EC_MASK_REG = UART_1_NO_INTR_SOURCES;
 217:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_SLAVE_MASK_REG  = UART_1_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_MASTER_MASK_REG = UART_1_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:Generated_Source\PSoC4/UART_1_UART.c ****         
 222:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_IntrTxMask = LO16(UART_1_INTR_TX_MASK_REG);
 224:Generated_Source\PSoC4/UART_1_UART.c **** 
 225:Generated_Source\PSoC4/UART_1_UART.c ****             /* Clear RX buffer indexes */
 226:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferHead     = 0u;
 227:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferTail     = 0u;
 228:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferOverflow = 0u;
 229:Generated_Source\PSoC4/UART_1_UART.c **** 
 230:Generated_Source\PSoC4/UART_1_UART.c ****             /* Clear TX buffer indexes */
 231:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferHead = 0u;
 232:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferTail = 0u;
 233:Generated_Source\PSoC4/UART_1_UART.c ****         }
 234:Generated_Source\PSoC4/UART_1_UART.c ****     }
 235:Generated_Source\PSoC4/UART_1_UART.c **** 
 236:Generated_Source\PSoC4/UART_1_UART.c **** #else
 237:Generated_Source\PSoC4/UART_1_UART.c **** 
 238:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 239:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartInit
 240:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 241:Generated_Source\PSoC4/UART_1_UART.c ****     *
 242:Generated_Source\PSoC4/UART_1_UART.c ****     *  Configures the SCB for the UART operation.
 243:Generated_Source\PSoC4/UART_1_UART.c ****     *
 244:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 245:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartInit(void)
 246:Generated_Source\PSoC4/UART_1_UART.c ****     {
  26              		.loc 1 246 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
 247:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure UART interface */
 248:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_CTRL_REG = UART_1_UART_DEFAULT_CTRL;
  32              		.loc 1 248 0
  33 0002 144A     		ldr	r2, .L2
  34 0004 144B     		ldr	r3, .L2+4
  35 0006 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC4/UART_1_UART.c **** 
 250:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 6


 251:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_CTRL_REG = UART_1_UART_DEFAULT_UART_CTRL;
  36              		.loc 1 251 0
  37 0008 0023     		mov	r3, #0
  38 000a 144A     		ldr	r2, .L2+8
  39 000c 1360     		str	r3, [r2]
 252:Generated_Source\PSoC4/UART_1_UART.c **** 
 253:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure RX direction */
 254:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RX_CTRL_REG = UART_1_UART_DEFAULT_UART_RX_CTRL;
  40              		.loc 1 254 0
  41 000e 0121     		mov	r1, #1
  42 0010 134A     		ldr	r2, .L2+12
  43 0012 1160     		str	r1, [r2]
 255:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_CTRL_REG      = UART_1_UART_DEFAULT_RX_CTRL;
  44              		.loc 1 255 0
  45 0014 134A     		ldr	r2, .L2+16
  46 0016 1448     		ldr	r0, .L2+20
  47 0018 0260     		str	r2, [r0]
 256:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_FIFO_CTRL_REG = UART_1_UART_DEFAULT_RX_FIFO_CTRL;
  48              		.loc 1 256 0
  49 001a 0724     		mov	r4, #7
  50 001c 1348     		ldr	r0, .L2+24
  51 001e 0460     		str	r4, [r0]
 257:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_MATCH_REG     = UART_1_UART_DEFAULT_RX_MATCH_REG;
  52              		.loc 1 257 0
  53 0020 1348     		ldr	r0, .L2+28
  54 0022 0360     		str	r3, [r0]
 258:Generated_Source\PSoC4/UART_1_UART.c **** 
 259:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure TX direction */
 260:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_TX_CTRL_REG = UART_1_UART_DEFAULT_UART_TX_CTRL;
  55              		.loc 1 260 0
  56 0024 1348     		ldr	r0, .L2+32
  57 0026 0160     		str	r1, [r0]
 261:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_CTRL_REG      = UART_1_UART_DEFAULT_TX_CTRL;
  58              		.loc 1 261 0
  59 0028 1349     		ldr	r1, .L2+36
  60 002a 0A60     		str	r2, [r1]
 262:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_FIFO_CTRL_REG = UART_1_UART_DEFAULT_TX_FIFO_CTRL;
  61              		.loc 1 262 0
  62 002c 134A     		ldr	r2, .L2+40
  63 002e 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/UART_1_UART.c **** 
 264:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 265:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_FLOW_CTRL_REG = UART_1_UART_DEFAULT_FLOW_CTRL;
 266:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 267:Generated_Source\PSoC4/UART_1_UART.c **** 
 268:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_SCB_IRQ_INTERNAL)
 270:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntDisable    (UART_1_ISR_NUMBER);
 271:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntSetPriority(UART_1_ISR_NUMBER, UART_1_ISR_PRIORITY);
 272:Generated_Source\PSoC4/UART_1_UART.c ****         (void) CyIntSetVector(UART_1_ISR_NUMBER, &UART_1_SPI_UART_ISR);
 273:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 274:Generated_Source\PSoC4/UART_1_UART.c **** 
 275:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure WAKE interrupt */
 276:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_UART_RX_WAKEUP_IRQ)
 277:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntDisable    (UART_1_RX_WAKE_ISR_NUMBER);
 278:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntSetPriority(UART_1_RX_WAKE_ISR_NUMBER, UART_1_RX_WAKE_ISR_PRIORITY);
 279:Generated_Source\PSoC4/UART_1_UART.c ****         (void) CyIntSetVector(UART_1_RX_WAKE_ISR_NUMBER, &UART_1_UART_WAKEUP_ISR);
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 7


 280:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RX_WAKEUP_IRQ) */
 281:Generated_Source\PSoC4/UART_1_UART.c **** 
 282:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure interrupt sources */
 283:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_I2C_EC_MASK_REG = UART_1_UART_DEFAULT_INTR_I2C_EC_MASK;
  64              		.loc 1 283 0
  65 0030 134A     		ldr	r2, .L2+44
  66 0032 1360     		str	r3, [r2]
 284:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_SPI_EC_MASK_REG = UART_1_UART_DEFAULT_INTR_SPI_EC_MASK;
  67              		.loc 1 284 0
  68 0034 134A     		ldr	r2, .L2+48
  69 0036 1360     		str	r3, [r2]
 285:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_SLAVE_MASK_REG  = UART_1_UART_DEFAULT_INTR_SLAVE_MASK;
  70              		.loc 1 285 0
  71 0038 134A     		ldr	r2, .L2+52
  72 003a 1360     		str	r3, [r2]
 286:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_MASTER_MASK_REG = UART_1_UART_DEFAULT_INTR_MASTER_MASK;
  73              		.loc 1 286 0
  74 003c 134A     		ldr	r2, .L2+56
  75 003e 1360     		str	r3, [r2]
 287:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_RX_MASK_REG     = UART_1_UART_DEFAULT_INTR_RX_MASK;
  76              		.loc 1 287 0
  77 0040 0421     		mov	r1, #4
  78 0042 134A     		ldr	r2, .L2+60
  79 0044 1160     		str	r1, [r2]
 288:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_TX_MASK_REG     = UART_1_UART_DEFAULT_INTR_TX_MASK;
  80              		.loc 1 288 0
  81 0046 134A     		ldr	r2, .L2+64
  82 0048 1360     		str	r3, [r2]
 289:Generated_Source\PSoC4/UART_1_UART.c ****     
 290:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_IntrTxMask = LO16(UART_1_INTR_TX_MASK_REG);
  83              		.loc 1 291 0
  84 004a 1268     		ldr	r2, [r2]
  85 004c 124B     		ldr	r3, .L2+68
  86 004e 1A80     		strh	r2, [r3]
 292:Generated_Source\PSoC4/UART_1_UART.c **** 
 293:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_INTERNAL_RX_SW_BUFFER_CONST)
 294:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferHead     = 0u;
 295:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferTail     = 0u;
 296:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferOverflow = 0u;
 297:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_INTERNAL_RX_SW_BUFFER_CONST) */
 298:Generated_Source\PSoC4/UART_1_UART.c **** 
 299:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_INTERNAL_TX_SW_BUFFER_CONST)
 300:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_txBufferHead = 0u;
 301:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_txBufferTail = 0u;
 302:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_INTERNAL_TX_SW_BUFFER_CONST) */
 303:Generated_Source\PSoC4/UART_1_UART.c ****     }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 0050 10BD     		pop	{r4, pc}
  90              	.L3:
  91 0052 C046     		.align	2
  92              	.L2:
  93 0054 0B000002 		.word	33554443
  94 0058 00000740 		.word	1074200576
  95 005c 40000740 		.word	1074200640
  96 0060 48000740 		.word	1074200648
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 8


  97 0064 07000080 		.word	-2147483641
  98 0068 00030740 		.word	1074201344
  99 006c 04030740 		.word	1074201348
 100 0070 10030740 		.word	1074201360
 101 0074 44000740 		.word	1074200644
 102 0078 00020740 		.word	1074201088
 103 007c 04020740 		.word	1074201092
 104 0080 880E0740 		.word	1074204296
 105 0084 C80E0740 		.word	1074204360
 106 0088 480F0740 		.word	1074204488
 107 008c 080F0740 		.word	1074204424
 108 0090 C80F0740 		.word	1074204616
 109 0094 880F0740 		.word	1074204552
 110 0098 00000000 		.word	UART_1_IntrTxMask
 111              		.cfi_endproc
 112              	.LFE0:
 113              		.size	UART_1_UartInit, .-UART_1_UartInit
 114              		.section	.text.UART_1_UartPostEnable,"ax",%progbits
 115              		.align	2
 116              		.global	UART_1_UartPostEnable
 117              		.code	16
 118              		.thumb_func
 119              		.type	UART_1_UartPostEnable, %function
 120              	UART_1_UartPostEnable:
 121              	.LFB1:
 304:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:Generated_Source\PSoC4/UART_1_UART.c **** 
 306:Generated_Source\PSoC4/UART_1_UART.c **** 
 307:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartPostEnable
 309:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/UART_1_UART.c **** *
 311:Generated_Source\PSoC4/UART_1_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:Generated_Source\PSoC4/UART_1_UART.c **** *  controlled by the SCB UART.
 313:Generated_Source\PSoC4/UART_1_UART.c **** *
 314:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartPostEnable(void)
 316:Generated_Source\PSoC4/UART_1_UART.c **** {
 122              		.loc 1 316 0
 123              		.cfi_startproc
 317:Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 318:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 319:Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_TX_SDA_MISO_PIN_USED)
 320:Generated_Source\PSoC4/UART_1_UART.c ****         {
 321:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set SCB UART to drive the output pin */
 322:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG, UART_1_TX_SDA_MISO_HSIOM_MASK,
 323:Generated_Source\PSoC4/UART_1_UART.c ****                                            UART_1_TX_SDA_MISO_HSIOM_POS, UART_1_TX_SDA_MISO_HSIOM_S
 324:Generated_Source\PSoC4/UART_1_UART.c ****         }
 325:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_TX_SDA_MISO_PIN_PIN) */
 326:Generated_Source\PSoC4/UART_1_UART.c **** 
 327:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 328:Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_SS0_PIN)
 329:Generated_Source\PSoC4/UART_1_UART.c ****             if (UART_1_CHECK_SS0_PIN_USED)
 330:Generated_Source\PSoC4/UART_1_UART.c ****             {
 331:Generated_Source\PSoC4/UART_1_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG, UART_1_SS0_HSIOM_MASK,
 333:Generated_Source\PSoC4/UART_1_UART.c ****                                                UART_1_SS0_HSIOM_POS, UART_1_SS0_HSIOM_SEL_UART);
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 9


 334:Generated_Source\PSoC4/UART_1_UART.c ****             }
 335:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_SS0_PIN) */
 336:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 337:Generated_Source\PSoC4/UART_1_UART.c **** 
 338:Generated_Source\PSoC4/UART_1_UART.c **** #else
 339:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_TX_PIN)
 340:Generated_Source\PSoC4/UART_1_UART.c ****          /* Set SCB UART to drive the output pin */
 341:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_HSIOM_REG, UART_1_TX_HSIOM_MASK,
 124              		.loc 1 341 0
 125 0000 064A     		ldr	r2, .L5
 126 0002 1168     		ldr	r1, [r2]
 127 0004 064B     		ldr	r3, .L5+4
 128 0006 0B40     		and	r3, r1
 129 0008 9021     		mov	r1, #144
 130 000a 0904     		lsl	r1, r1, #16
 131 000c 0B43     		orr	r3, r1
 132 000e 1360     		str	r3, [r2]
 342:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_TX_HSIOM_POS, UART_1_TX_HSIOM_SEL_UART);
 343:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_TX_PIN) */
 344:Generated_Source\PSoC4/UART_1_UART.c **** 
 345:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_RTS_PIN)
 346:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set SCB UART to drive the output pin */
 347:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_RTS_HSIOM_REG, UART_1_RTS_HSIOM_MASK,
 348:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_RTS_HSIOM_POS, UART_1_RTS_HSIOM_SEL_UART);
 349:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RTS_PIN) */
 350:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:Generated_Source\PSoC4/UART_1_UART.c **** 
 352:Generated_Source\PSoC4/UART_1_UART.c ****     /* Restore TX interrupt sources. */
 353:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_SetTxInterruptMode(UART_1_IntrTxMask);
 133              		.loc 1 353 0
 134 0010 044B     		ldr	r3, .L5+8
 135 0012 1A88     		ldrh	r2, [r3]
 136 0014 044B     		ldr	r3, .L5+12
 137 0016 1A60     		str	r2, [r3]
 354:Generated_Source\PSoC4/UART_1_UART.c **** }
 138              		.loc 1 354 0
 139              		@ sp needed
 140 0018 7047     		bx	lr
 141              	.L6:
 142 001a C046     		.align	2
 143              	.L5:
 144 001c 00000140 		.word	1073807360
 145 0020 FFFF0FFF 		.word	-15728641
 146 0024 00000000 		.word	UART_1_IntrTxMask
 147 0028 880F0740 		.word	1074204552
 148              		.cfi_endproc
 149              	.LFE1:
 150              		.size	UART_1_UartPostEnable, .-UART_1_UartPostEnable
 151              		.section	.text.UART_1_UartStop,"ax",%progbits
 152              		.align	2
 153              		.global	UART_1_UartStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	UART_1_UartStop, %function
 157              	UART_1_UartStop:
 158              	.LFB2:
 355:Generated_Source\PSoC4/UART_1_UART.c **** 
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 10


 356:Generated_Source\PSoC4/UART_1_UART.c **** 
 357:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartStop
 359:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 360:Generated_Source\PSoC4/UART_1_UART.c **** *
 361:Generated_Source\PSoC4/UART_1_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:Generated_Source\PSoC4/UART_1_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 363:Generated_Source\PSoC4/UART_1_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:Generated_Source\PSoC4/UART_1_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:Generated_Source\PSoC4/UART_1_UART.c **** *
 366:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 367:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartStop(void)
 368:Generated_Source\PSoC4/UART_1_UART.c **** {
 159              		.loc 1 368 0
 160              		.cfi_startproc
 369:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 370:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 371:Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_TX_SDA_MISO_PIN_USED)
 372:Generated_Source\PSoC4/UART_1_UART.c ****         {
 373:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set GPIO to drive output pin */
 374:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG, UART_1_TX_SDA_MISO_HSIOM_MASK,
 375:Generated_Source\PSoC4/UART_1_UART.c ****                                            UART_1_TX_SDA_MISO_HSIOM_POS, UART_1_TX_SDA_MISO_HSIOM_S
 376:Generated_Source\PSoC4/UART_1_UART.c ****         }
 377:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_TX_SDA_MISO_PIN_PIN) */
 378:Generated_Source\PSoC4/UART_1_UART.c **** 
 379:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 380:Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_SS0_PIN)
 381:Generated_Source\PSoC4/UART_1_UART.c ****             if (UART_1_CHECK_SS0_PIN_USED)
 382:Generated_Source\PSoC4/UART_1_UART.c ****             {
 383:Generated_Source\PSoC4/UART_1_UART.c ****                 /* Set output pin state after block is disabled */
 384:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_spi_ss0_Write(UART_1_GET_UART_RTS_INACTIVE);
 385:Generated_Source\PSoC4/UART_1_UART.c **** 
 386:Generated_Source\PSoC4/UART_1_UART.c ****                 /* Set GPIO to drive output pin */
 387:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG, UART_1_SS0_HSIOM_MASK,
 388:Generated_Source\PSoC4/UART_1_UART.c ****                                                UART_1_SS0_HSIOM_POS, UART_1_SS0_HSIOM_SEL_GPIO);
 389:Generated_Source\PSoC4/UART_1_UART.c ****             }
 390:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_SS0_PIN) */
 391:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 392:Generated_Source\PSoC4/UART_1_UART.c **** 
 393:Generated_Source\PSoC4/UART_1_UART.c **** #else
 394:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_TX_PIN)
 395:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set GPIO to drive output pin */
 396:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_HSIOM_REG, UART_1_TX_HSIOM_MASK,
 161              		.loc 1 396 0
 162 0000 064A     		ldr	r2, .L8
 163 0002 1168     		ldr	r1, [r2]
 164 0004 064B     		ldr	r3, .L8+4
 165 0006 0B40     		and	r3, r1
 166 0008 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_TX_HSIOM_POS, UART_1_TX_HSIOM_SEL_GPIO);
 398:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_TX_PIN) */
 399:Generated_Source\PSoC4/UART_1_UART.c **** 
 400:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_RTS_PIN)
 401:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set output pin state after block is disabled */
 402:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rts_Write(UART_1_GET_UART_RTS_INACTIVE);
 403:Generated_Source\PSoC4/UART_1_UART.c **** 
 404:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set GPIO to drive output pin */
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 11


 405:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_RTS_HSIOM_REG, UART_1_RTS_HSIOM_MASK,
 406:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_RTS_HSIOM_POS, UART_1_RTS_HSIOM_SEL_GPIO);
 407:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RTS_PIN) */
 408:Generated_Source\PSoC4/UART_1_UART.c **** 
 409:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:Generated_Source\PSoC4/UART_1_UART.c **** 
 411:Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_WAKE_ENABLE_CONST)
 412:Generated_Source\PSoC4/UART_1_UART.c ****     /* Disable skip start feature used for wakeup */
 413:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_UART_RX_CTRL_REG &= (uint32) ~UART_1_UART_RX_CTRL_SKIP_START;
 414:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_WAKE_ENABLE_CONST) */
 415:Generated_Source\PSoC4/UART_1_UART.c **** 
 416:Generated_Source\PSoC4/UART_1_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_IntrTxMask = LO16(UART_1_GetTxInterruptMode() & UART_1_INTR_UART_TX_RESTORE);
 167              		.loc 1 417 0
 168 000a 064B     		ldr	r3, .L8+8
 169 000c 1A68     		ldr	r2, [r3]
 170 000e E423     		mov	r3, #228
 171 0010 DB00     		lsl	r3, r3, #3
 172 0012 1340     		and	r3, r2
 173 0014 044A     		ldr	r2, .L8+12
 174 0016 1380     		strh	r3, [r2]
 418:Generated_Source\PSoC4/UART_1_UART.c **** }
 175              		.loc 1 418 0
 176              		@ sp needed
 177 0018 7047     		bx	lr
 178              	.L9:
 179 001a C046     		.align	2
 180              	.L8:
 181 001c 00000140 		.word	1073807360
 182 0020 FFFF0FFF 		.word	-15728641
 183 0024 880F0740 		.word	1074204552
 184 0028 00000000 		.word	UART_1_IntrTxMask
 185              		.cfi_endproc
 186              	.LFE2:
 187              		.size	UART_1_UartStop, .-UART_1_UartStop
 188              		.section	.text.UART_1_UartSetRxAddress,"ax",%progbits
 189              		.align	2
 190              		.global	UART_1_UartSetRxAddress
 191              		.code	16
 192              		.thumb_func
 193              		.type	UART_1_UartSetRxAddress, %function
 194              	UART_1_UartSetRxAddress:
 195              	.LFB3:
 419:Generated_Source\PSoC4/UART_1_UART.c **** 
 420:Generated_Source\PSoC4/UART_1_UART.c **** 
 421:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 422:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartSetRxAddress
 423:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 424:Generated_Source\PSoC4/UART_1_UART.c **** *
 425:Generated_Source\PSoC4/UART_1_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:Generated_Source\PSoC4/UART_1_UART.c **** *  Multiprocessor mode.
 427:Generated_Source\PSoC4/UART_1_UART.c **** *
 428:Generated_Source\PSoC4/UART_1_UART.c **** *  \param address: Address for hardware address detection.
 429:Generated_Source\PSoC4/UART_1_UART.c **** *
 430:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartSetRxAddress(uint32 address)
 432:Generated_Source\PSoC4/UART_1_UART.c **** {
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 12


 196              		.loc 1 432 0
 197              		.cfi_startproc
 198              	.LVL0:
 433:Generated_Source\PSoC4/UART_1_UART.c ****      uint32 matchReg;
 434:Generated_Source\PSoC4/UART_1_UART.c **** 
 435:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg = UART_1_RX_MATCH_REG;
 199              		.loc 1 435 0
 200 0000 034A     		ldr	r2, .L11
 201 0002 1368     		ldr	r3, [r2]
 202              	.LVL1:
 436:Generated_Source\PSoC4/UART_1_UART.c **** 
 437:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg &= ((uint32) ~UART_1_RX_MATCH_ADDR_MASK); /* Clear address bits */
 203              		.loc 1 437 0
 204 0004 FF21     		mov	r1, #255
 205 0006 8B43     		bic	r3, r1
 206              	.LVL2:
 438:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg |= ((uint32)  (address & UART_1_RX_MATCH_ADDR_MASK)); /* Set address  */
 207              		.loc 1 438 0
 208 0008 0840     		and	r0, r1
 209              	.LVL3:
 210 000a 1843     		orr	r0, r3
 211              	.LVL4:
 439:Generated_Source\PSoC4/UART_1_UART.c **** 
 440:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_RX_MATCH_REG = matchReg;
 212              		.loc 1 440 0
 213 000c 1060     		str	r0, [r2]
 441:Generated_Source\PSoC4/UART_1_UART.c **** }
 214              		.loc 1 441 0
 215              		@ sp needed
 216 000e 7047     		bx	lr
 217              	.L12:
 218              		.align	2
 219              	.L11:
 220 0010 10030740 		.word	1074201360
 221              		.cfi_endproc
 222              	.LFE3:
 223              		.size	UART_1_UartSetRxAddress, .-UART_1_UartSetRxAddress
 224              		.section	.text.UART_1_UartSetRxAddressMask,"ax",%progbits
 225              		.align	2
 226              		.global	UART_1_UartSetRxAddressMask
 227              		.code	16
 228              		.thumb_func
 229              		.type	UART_1_UartSetRxAddressMask, %function
 230              	UART_1_UartSetRxAddressMask:
 231              	.LFB4:
 442:Generated_Source\PSoC4/UART_1_UART.c **** 
 443:Generated_Source\PSoC4/UART_1_UART.c **** 
 444:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartSetRxAddressMask
 446:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_1_UART.c **** *
 448:Generated_Source\PSoC4/UART_1_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:Generated_Source\PSoC4/UART_1_UART.c **** *
 450:Generated_Source\PSoC4/UART_1_UART.c **** *  \param addressMask: Address mask.
 451:Generated_Source\PSoC4/UART_1_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:Generated_Source\PSoC4/UART_1_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:Generated_Source\PSoC4/UART_1_UART.c **** *     of the address.
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 13


 454:Generated_Source\PSoC4/UART_1_UART.c **** *
 455:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartSetRxAddressMask(uint32 addressMask)
 457:Generated_Source\PSoC4/UART_1_UART.c **** {
 232              		.loc 1 457 0
 233              		.cfi_startproc
 234              	.LVL5:
 458:Generated_Source\PSoC4/UART_1_UART.c ****     uint32 matchReg;
 459:Generated_Source\PSoC4/UART_1_UART.c **** 
 460:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg = UART_1_RX_MATCH_REG;
 235              		.loc 1 460 0
 236 0000 034A     		ldr	r2, .L14
 237 0002 1168     		ldr	r1, [r2]
 238              	.LVL6:
 461:Generated_Source\PSoC4/UART_1_UART.c **** 
 462:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg &= ((uint32) ~UART_1_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 239              		.loc 1 462 0
 240 0004 034B     		ldr	r3, .L14+4
 241 0006 0B40     		and	r3, r1
 242              	.LVL7:
 463:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg |= ((uint32) (addressMask << UART_1_RX_MATCH_MASK_POS));
 243              		.loc 1 463 0
 244 0008 0004     		lsl	r0, r0, #16
 245              	.LVL8:
 246 000a 1843     		orr	r0, r3
 247              	.LVL9:
 464:Generated_Source\PSoC4/UART_1_UART.c **** 
 465:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_RX_MATCH_REG = matchReg;
 248              		.loc 1 465 0
 249 000c 1060     		str	r0, [r2]
 466:Generated_Source\PSoC4/UART_1_UART.c **** }
 250              		.loc 1 466 0
 251              		@ sp needed
 252 000e 7047     		bx	lr
 253              	.L15:
 254              		.align	2
 255              	.L14:
 256 0010 10030740 		.word	1074201360
 257 0014 FFFF00FF 		.word	-16711681
 258              		.cfi_endproc
 259              	.LFE4:
 260              		.size	UART_1_UartSetRxAddressMask, .-UART_1_UartSetRxAddressMask
 261              		.section	.text.UART_1_UartGetChar,"ax",%progbits
 262              		.align	2
 263              		.global	UART_1_UartGetChar
 264              		.code	16
 265              		.thumb_func
 266              		.type	UART_1_UartGetChar, %function
 267              	UART_1_UartGetChar:
 268              	.LFB5:
 467:Generated_Source\PSoC4/UART_1_UART.c **** 
 468:Generated_Source\PSoC4/UART_1_UART.c **** 
 469:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_UART_RX_DIRECTION)
 470:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 471:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartGetChar
 472:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 473:Generated_Source\PSoC4/UART_1_UART.c ****     *
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 14


 474:Generated_Source\PSoC4/UART_1_UART.c ****     *  Retrieves next data element from receive buffer.
 475:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:Generated_Source\PSoC4/UART_1_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 477:Generated_Source\PSoC4/UART_1_UART.c ****     *  is present.
 478:Generated_Source\PSoC4/UART_1_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:Generated_Source\PSoC4/UART_1_UART.c ****     *    FIFO.
 480:Generated_Source\PSoC4/UART_1_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:Generated_Source\PSoC4/UART_1_UART.c ****     *    receive buffer.
 482:Generated_Source\PSoC4/UART_1_UART.c ****     *
 483:Generated_Source\PSoC4/UART_1_UART.c ****     *  \return
 484:Generated_Source\PSoC4/UART_1_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:Generated_Source\PSoC4/UART_1_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:Generated_Source\PSoC4/UART_1_UART.c ****     *   data available.
 487:Generated_Source\PSoC4/UART_1_UART.c ****     *
 488:Generated_Source\PSoC4/UART_1_UART.c ****     *  \sideeffect
 489:Generated_Source\PSoC4/UART_1_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX FIFO and software buffer usage.
 491:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:Generated_Source\PSoC4/UART_1_UART.c ****     *   is not treated as an error condition.
 493:Generated_Source\PSoC4/UART_1_UART.c ****     *   Check UART_1_rxBufferOverflow to capture that error condition.
 494:Generated_Source\PSoC4/UART_1_UART.c ****     *
 495:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/UART_1_UART.c ****     uint32 UART_1_UartGetChar(void)
 497:Generated_Source\PSoC4/UART_1_UART.c ****     {
 269              		.loc 1 497 0
 270              		.cfi_startproc
 271 0000 08B5     		push	{r3, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 275              	.LVL10:
 498:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData = 0u;
 499:Generated_Source\PSoC4/UART_1_UART.c **** 
 500:Generated_Source\PSoC4/UART_1_UART.c ****         /* Reads data only if there is data to read */
 501:Generated_Source\PSoC4/UART_1_UART.c ****         if (0u != UART_1_SpiUartGetRxBufferSize())
 276              		.loc 1 501 0
 277 0002 FFF7FEFF 		bl	UART_1_SpiUartGetRxBufferSize
 278              	.LVL11:
 279 0006 0028     		cmp	r0, #0
 280 0008 02D0     		beq	.L19
 502:Generated_Source\PSoC4/UART_1_UART.c ****         {
 503:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_SpiUartReadRxData();
 281              		.loc 1 503 0
 282 000a FFF7FEFF 		bl	UART_1_SpiUartReadRxData
 283              	.LVL12:
 284 000e 00E0     		b	.L17
 285              	.LVL13:
 286              	.L19:
 498:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData = 0u;
 287              		.loc 1 498 0
 288 0010 0020     		mov	r0, #0
 289              	.LVL14:
 290              	.L17:
 504:Generated_Source\PSoC4/UART_1_UART.c ****         }
 505:Generated_Source\PSoC4/UART_1_UART.c **** 
 506:Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_INTR_RX(UART_1_INTR_RX_ERR))
 291              		.loc 1 506 0
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 15


 292 0012 054B     		ldr	r3, .L20
 293 0014 1A68     		ldr	r2, [r3]
 294 0016 D823     		mov	r3, #216
 295 0018 9B00     		lsl	r3, r3, #2
 296 001a 1A42     		tst	r2, r3
 297 001c 03D0     		beq	.L18
 298              	.LVL15:
 507:Generated_Source\PSoC4/UART_1_UART.c ****         {
 508:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 299              		.loc 1 509 0
 300 001e 1A1C     		mov	r2, r3
 301 0020 014B     		ldr	r3, .L20
 302 0022 1A60     		str	r2, [r3]
 508:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 303              		.loc 1 508 0
 304 0024 0020     		mov	r0, #0
 305              	.LVL16:
 306              	.L18:
 510:Generated_Source\PSoC4/UART_1_UART.c ****         }
 511:Generated_Source\PSoC4/UART_1_UART.c **** 
 512:Generated_Source\PSoC4/UART_1_UART.c ****         return (rxData);
 513:Generated_Source\PSoC4/UART_1_UART.c ****     }
 307              		.loc 1 513 0
 308              		@ sp needed
 309 0026 08BD     		pop	{r3, pc}
 310              	.L21:
 311              		.align	2
 312              	.L20:
 313 0028 C00F0740 		.word	1074204608
 314              		.cfi_endproc
 315              	.LFE5:
 316              		.size	UART_1_UartGetChar, .-UART_1_UartGetChar
 317              		.section	.text.UART_1_UartGetByte,"ax",%progbits
 318              		.align	2
 319              		.global	UART_1_UartGetByte
 320              		.code	16
 321              		.thumb_func
 322              		.type	UART_1_UartGetByte, %function
 323              	UART_1_UartGetByte:
 324              	.LFB6:
 514:Generated_Source\PSoC4/UART_1_UART.c **** 
 515:Generated_Source\PSoC4/UART_1_UART.c **** 
 516:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 517:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartGetByte
 518:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 519:Generated_Source\PSoC4/UART_1_UART.c ****     *
 520:Generated_Source\PSoC4/UART_1_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:Generated_Source\PSoC4/UART_1_UART.c ****     *  received byte and error condition.
 522:Generated_Source\PSoC4/UART_1_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:Generated_Source\PSoC4/UART_1_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:Generated_Source\PSoC4/UART_1_UART.c ****     *     empty.
 525:Generated_Source\PSoC4/UART_1_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:Generated_Source\PSoC4/UART_1_UART.c ****     *     software receive buffer.
 527:Generated_Source\PSoC4/UART_1_UART.c ****     *
 528:Generated_Source\PSoC4/UART_1_UART.c ****     *  \return
 529:Generated_Source\PSoC4/UART_1_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 16


 530:Generated_Source\PSoC4/UART_1_UART.c ****     *   other bits contain the error condition.
 531:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_OVERFLOW - Attempt to write to a full
 532:Generated_Source\PSoC4/UART_1_UART.c ****     *     receiver FIFO.
 533:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_UNDERFLOW	Attempt to read from an empty
 534:Generated_Source\PSoC4/UART_1_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_FRAME_ERROR - UART framing error detected.
 536:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_PARITY_ERROR - UART parity error detected.
 537:Generated_Source\PSoC4/UART_1_UART.c ****     *
 538:Generated_Source\PSoC4/UART_1_UART.c ****     *  \sideeffect
 539:Generated_Source\PSoC4/UART_1_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX FIFO and software buffer usage.
 541:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:Generated_Source\PSoC4/UART_1_UART.c ****     *   is not treated as an error condition.
 543:Generated_Source\PSoC4/UART_1_UART.c ****     *   Check UART_1_rxBufferOverflow to capture that error condition.
 544:Generated_Source\PSoC4/UART_1_UART.c ****     *
 545:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 546:Generated_Source\PSoC4/UART_1_UART.c ****     uint32 UART_1_UartGetByte(void)
 547:Generated_Source\PSoC4/UART_1_UART.c ****     {
 325              		.loc 1 547 0
 326              		.cfi_startproc
 327 0000 08B5     		push	{r3, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 548:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData;
 549:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 tmpStatus;
 550:Generated_Source\PSoC4/UART_1_UART.c **** 
 551:Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_CHECK_RX_SW_BUFFER)
 552:Generated_Source\PSoC4/UART_1_UART.c ****         {
 553:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_DisableInt();
 554:Generated_Source\PSoC4/UART_1_UART.c ****         }
 555:Generated_Source\PSoC4/UART_1_UART.c ****         #endif
 556:Generated_Source\PSoC4/UART_1_UART.c **** 
 557:Generated_Source\PSoC4/UART_1_UART.c ****         if (0u != UART_1_SpiUartGetRxBufferSize())
 331              		.loc 1 557 0
 332 0002 FFF7FEFF 		bl	UART_1_SpiUartGetRxBufferSize
 333              	.LVL17:
 334 0006 0028     		cmp	r0, #0
 335 0008 02D0     		beq	.L23
 558:Generated_Source\PSoC4/UART_1_UART.c ****         {
 559:Generated_Source\PSoC4/UART_1_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:Generated_Source\PSoC4/UART_1_UART.c ****             * buffer.
 561:Generated_Source\PSoC4/UART_1_UART.c ****             */
 562:Generated_Source\PSoC4/UART_1_UART.c ****             #if (UART_1_CHECK_RX_SW_BUFFER)
 563:Generated_Source\PSoC4/UART_1_UART.c ****             {
 564:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_EnableInt();
 565:Generated_Source\PSoC4/UART_1_UART.c ****             }
 566:Generated_Source\PSoC4/UART_1_UART.c ****             #endif
 567:Generated_Source\PSoC4/UART_1_UART.c **** 
 568:Generated_Source\PSoC4/UART_1_UART.c ****             /* Get received byte */
 569:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_SpiUartReadRxData();
 336              		.loc 1 569 0
 337 000a FFF7FEFF 		bl	UART_1_SpiUartReadRxData
 338              	.LVL18:
 339 000e 01E0     		b	.L24
 340              	.LVL19:
 341              	.L23:
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 17


 570:Generated_Source\PSoC4/UART_1_UART.c ****         }
 571:Generated_Source\PSoC4/UART_1_UART.c ****         else
 572:Generated_Source\PSoC4/UART_1_UART.c ****         {
 573:Generated_Source\PSoC4/UART_1_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:Generated_Source\PSoC4/UART_1_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:Generated_Source\PSoC4/UART_1_UART.c ****             */
 576:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_RX_FIFO_RD_REG;
 342              		.loc 1 576 0
 343 0010 054B     		ldr	r3, .L25
 344 0012 1868     		ldr	r0, [r3]
 345              	.LVL20:
 346              	.L24:
 577:Generated_Source\PSoC4/UART_1_UART.c **** 
 578:Generated_Source\PSoC4/UART_1_UART.c **** 
 579:Generated_Source\PSoC4/UART_1_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:Generated_Source\PSoC4/UART_1_UART.c ****             #if (UART_1_CHECK_RX_SW_BUFFER)
 581:Generated_Source\PSoC4/UART_1_UART.c ****             {
 582:Generated_Source\PSoC4/UART_1_UART.c **** 
 583:Generated_Source\PSoC4/UART_1_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:Generated_Source\PSoC4/UART_1_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:Generated_Source\PSoC4/UART_1_UART.c ****                 */
 586:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_ClearRxInterruptSource(UART_1_INTR_RX_NOT_EMPTY);
 587:Generated_Source\PSoC4/UART_1_UART.c **** 
 588:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_EnableInt();
 589:Generated_Source\PSoC4/UART_1_UART.c ****             }
 590:Generated_Source\PSoC4/UART_1_UART.c ****             #endif
 591:Generated_Source\PSoC4/UART_1_UART.c ****         }
 592:Generated_Source\PSoC4/UART_1_UART.c **** 
 593:Generated_Source\PSoC4/UART_1_UART.c ****         /* Get and clear RX error mask */
 594:Generated_Source\PSoC4/UART_1_UART.c ****         tmpStatus = (UART_1_GetRxInterruptSource() & UART_1_INTR_RX_ERR);
 347              		.loc 1 594 0
 348 0014 054A     		ldr	r2, .L25+4
 349 0016 1368     		ldr	r3, [r2]
 350 0018 D821     		mov	r1, #216
 351 001a 8900     		lsl	r1, r1, #2
 352 001c 0B40     		and	r3, r1
 353              	.LVL21:
 595:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 354              		.loc 1 595 0
 355 001e 1160     		str	r1, [r2]
 596:Generated_Source\PSoC4/UART_1_UART.c **** 
 597:Generated_Source\PSoC4/UART_1_UART.c ****         /* Puts together data and error status:
 598:Generated_Source\PSoC4/UART_1_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:Generated_Source\PSoC4/UART_1_UART.c ****         */
 600:Generated_Source\PSoC4/UART_1_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 356              		.loc 1 600 0
 357 0020 1B02     		lsl	r3, r3, #8
 358              	.LVL22:
 359 0022 1843     		orr	r0, r3
 360              	.LVL23:
 601:Generated_Source\PSoC4/UART_1_UART.c **** 
 602:Generated_Source\PSoC4/UART_1_UART.c ****         return (rxData);
 603:Generated_Source\PSoC4/UART_1_UART.c ****     }
 361              		.loc 1 603 0
 362              		@ sp needed
 363 0024 08BD     		pop	{r3, pc}
 364              	.L26:
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 18


 365 0026 C046     		.align	2
 366              	.L25:
 367 0028 40030740 		.word	1074201408
 368 002c C00F0740 		.word	1074204608
 369              		.cfi_endproc
 370              	.LFE6:
 371              		.size	UART_1_UartGetByte, .-UART_1_UartGetByte
 372              		.section	.text.UART_1_UartPutString,"ax",%progbits
 373              		.align	2
 374              		.global	UART_1_UartPutString
 375              		.code	16
 376              		.thumb_func
 377              		.type	UART_1_UartPutString, %function
 378              	UART_1_UartPutString:
 379              	.LFB7:
 604:Generated_Source\PSoC4/UART_1_UART.c **** 
 605:Generated_Source\PSoC4/UART_1_UART.c **** 
 606:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 607:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 608:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetRtsPolarity
 609:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 610:Generated_Source\PSoC4/UART_1_UART.c ****         *
 611:Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets active polarity of RTS output signal.
 612:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:Generated_Source\PSoC4/UART_1_UART.c ****         *
 615:Generated_Source\PSoC4/UART_1_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:Generated_Source\PSoC4/UART_1_UART.c ****         *   - UART_1_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:Generated_Source\PSoC4/UART_1_UART.c ****         *   - UART_1_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:Generated_Source\PSoC4/UART_1_UART.c ****         *
 619:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 620:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetRtsPolarity(uint32 polarity)
 621:Generated_Source\PSoC4/UART_1_UART.c ****         {
 622:Generated_Source\PSoC4/UART_1_UART.c ****             if(0u != polarity)
 623:Generated_Source\PSoC4/UART_1_UART.c ****             {
 624:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG |= (uint32)  UART_1_UART_FLOW_CTRL_RTS_POLARITY;
 625:Generated_Source\PSoC4/UART_1_UART.c ****             }
 626:Generated_Source\PSoC4/UART_1_UART.c ****             else
 627:Generated_Source\PSoC4/UART_1_UART.c ****             {
 628:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG &= (uint32) ~UART_1_UART_FLOW_CTRL_RTS_POLARITY;
 629:Generated_Source\PSoC4/UART_1_UART.c ****             }
 630:Generated_Source\PSoC4/UART_1_UART.c ****         }
 631:Generated_Source\PSoC4/UART_1_UART.c **** 
 632:Generated_Source\PSoC4/UART_1_UART.c **** 
 633:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 634:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetRtsFifoLevel
 635:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 636:Generated_Source\PSoC4/UART_1_UART.c ****         *
 637:Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:Generated_Source\PSoC4/UART_1_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:Generated_Source\PSoC4/UART_1_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/UART_1_UART.c ****         *
 643:Generated_Source\PSoC4/UART_1_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:Generated_Source\PSoC4/UART_1_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:Generated_Source\PSoC4/UART_1_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 19


 646:Generated_Source\PSoC4/UART_1_UART.c ****         *
 647:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 648:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetRtsFifoLevel(uint32 level)
 649:Generated_Source\PSoC4/UART_1_UART.c ****         {
 650:Generated_Source\PSoC4/UART_1_UART.c ****             uint32 uartFlowCtrl;
 651:Generated_Source\PSoC4/UART_1_UART.c **** 
 652:Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl = UART_1_UART_FLOW_CTRL_REG;
 653:Generated_Source\PSoC4/UART_1_UART.c **** 
 654:Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_1_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level ma
 655:Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl |= ((uint32) (UART_1_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:Generated_Source\PSoC4/UART_1_UART.c **** 
 657:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:Generated_Source\PSoC4/UART_1_UART.c ****         }
 659:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 660:Generated_Source\PSoC4/UART_1_UART.c **** 
 661:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_RX_DIRECTION) */
 662:Generated_Source\PSoC4/UART_1_UART.c **** 
 663:Generated_Source\PSoC4/UART_1_UART.c **** 
 664:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_UART_TX_DIRECTION)
 665:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 666:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartPutString
 667:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 668:Generated_Source\PSoC4/UART_1_UART.c ****     *
 669:Generated_Source\PSoC4/UART_1_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:Generated_Source\PSoC4/UART_1_UART.c ****     *  next available bus time.
 671:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:Generated_Source\PSoC4/UART_1_UART.c ****     *  requested data in transmit buffer.
 673:Generated_Source\PSoC4/UART_1_UART.c ****     *
 674:Generated_Source\PSoC4/UART_1_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:Generated_Source\PSoC4/UART_1_UART.c ****     *   transmit buffer.
 676:Generated_Source\PSoC4/UART_1_UART.c ****     *
 677:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 678:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartPutString(const char8 string[])
 679:Generated_Source\PSoC4/UART_1_UART.c ****     {
 380              		.loc 1 679 0
 381              		.cfi_startproc
 382              	.LVL24:
 383 0000 38B5     		push	{r3, r4, r5, lr}
 384              		.cfi_def_cfa_offset 16
 385              		.cfi_offset 3, -16
 386              		.cfi_offset 4, -12
 387              		.cfi_offset 5, -8
 388              		.cfi_offset 14, -4
 389 0002 051C     		mov	r5, r0
 390              	.LVL25:
 680:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 bufIndex;
 681:Generated_Source\PSoC4/UART_1_UART.c **** 
 682:Generated_Source\PSoC4/UART_1_UART.c ****         bufIndex = 0u;
 391              		.loc 1 682 0
 392 0004 0024     		mov	r4, #0
 683:Generated_Source\PSoC4/UART_1_UART.c **** 
 684:Generated_Source\PSoC4/UART_1_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:Generated_Source\PSoC4/UART_1_UART.c ****         while(string[bufIndex] != ((char8) 0))
 393              		.loc 1 685 0
 394 0006 02E0     		b	.L28
 395              	.LVL26:
 396              	.L29:
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 20


 686:Generated_Source\PSoC4/UART_1_UART.c ****         {
 687:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UartPutChar((uint32) string[bufIndex]);
 397              		.loc 1 687 0
 398 0008 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 399              	.LVL27:
 688:Generated_Source\PSoC4/UART_1_UART.c ****             bufIndex++;
 400              		.loc 1 688 0
 401 000c 0134     		add	r4, r4, #1
 402              	.LVL28:
 403              	.L28:
 685:Generated_Source\PSoC4/UART_1_UART.c ****         {
 404              		.loc 1 685 0
 405 000e 285D     		ldrb	r0, [r5, r4]
 406 0010 0028     		cmp	r0, #0
 407 0012 F9D1     		bne	.L29
 689:Generated_Source\PSoC4/UART_1_UART.c ****         }
 690:Generated_Source\PSoC4/UART_1_UART.c ****     }
 408              		.loc 1 690 0
 409              		@ sp needed
 410              	.LVL29:
 411              	.LVL30:
 412 0014 38BD     		pop	{r3, r4, r5, pc}
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	UART_1_UartPutString, .-UART_1_UartPutString
 416 0016 C046     		.section	.text.UART_1_UartPutCRLF,"ax",%progbits
 417              		.align	2
 418              		.global	UART_1_UartPutCRLF
 419              		.code	16
 420              		.thumb_func
 421              		.type	UART_1_UartPutCRLF, %function
 422              	UART_1_UartPutCRLF:
 423              	.LFB8:
 691:Generated_Source\PSoC4/UART_1_UART.c **** 
 692:Generated_Source\PSoC4/UART_1_UART.c **** 
 693:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartPutCRLF
 695:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/UART_1_UART.c ****     *
 697:Generated_Source\PSoC4/UART_1_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:Generated_Source\PSoC4/UART_1_UART.c ****     *  (0x0A) in the transmit buffer.
 699:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:Generated_Source\PSoC4/UART_1_UART.c ****     *  all requested data in transmit buffer.
 701:Generated_Source\PSoC4/UART_1_UART.c ****     *
 702:Generated_Source\PSoC4/UART_1_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:Generated_Source\PSoC4/UART_1_UART.c ****     *
 704:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 705:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartPutCRLF(uint32 txDataByte)
 706:Generated_Source\PSoC4/UART_1_UART.c ****     {
 424              		.loc 1 706 0
 425              		.cfi_startproc
 426              	.LVL31:
 427 0000 08B5     		push	{r3, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
 707:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 21


 431              		.loc 1 707 0
 432 0002 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 433              	.LVL32:
 708:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 434              		.loc 1 708 0
 435 0006 0D20     		mov	r0, #13
 436 0008 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 437              	.LVL33:
 709:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 438              		.loc 1 709 0
 439 000c 0A20     		mov	r0, #10
 440 000e FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 441              	.LVL34:
 710:Generated_Source\PSoC4/UART_1_UART.c ****     }
 442              		.loc 1 710 0
 443              		@ sp needed
 444 0012 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE8:
 447              		.size	UART_1_UartPutCRLF, .-UART_1_UartPutCRLF
 448              		.text
 449              	.Letext0:
 450              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 451              		.file 3 "Generated_Source\\PSoC4\\UART_1_SPI_UART.h"
 452              		.file 4 "Generated_Source\\PSoC4\\UART_1_PVT.h"
 453              		.section	.debug_info,"",%progbits
 454              	.Ldebug_info0:
 455 0000 C0020000 		.4byte	0x2c0
 456 0004 0400     		.2byte	0x4
 457 0006 00000000 		.4byte	.Ldebug_abbrev0
 458 000a 04       		.byte	0x4
 459 000b 01       		.uleb128 0x1
 460 000c 24020000 		.4byte	.LASF36
 461 0010 01       		.byte	0x1
 462 0011 13010000 		.4byte	.LASF37
 463 0015 14000000 		.4byte	.LASF38
 464 0019 00000000 		.4byte	.Ldebug_ranges0+0
 465 001d 00000000 		.4byte	0
 466 0021 00000000 		.4byte	.Ldebug_line0
 467 0025 02       		.uleb128 0x2
 468 0026 01       		.byte	0x1
 469 0027 06       		.byte	0x6
 470 0028 E8020000 		.4byte	.LASF0
 471 002c 02       		.uleb128 0x2
 472 002d 01       		.byte	0x1
 473 002e 08       		.byte	0x8
 474 002f AE000000 		.4byte	.LASF1
 475 0033 02       		.uleb128 0x2
 476 0034 02       		.byte	0x2
 477 0035 05       		.byte	0x5
 478 0036 B2020000 		.4byte	.LASF2
 479 003a 02       		.uleb128 0x2
 480 003b 02       		.byte	0x2
 481 003c 07       		.byte	0x7
 482 003d E6000000 		.4byte	.LASF3
 483 0041 02       		.uleb128 0x2
 484 0042 04       		.byte	0x4
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 22


 485 0043 05       		.byte	0x5
 486 0044 CC020000 		.4byte	.LASF4
 487 0048 02       		.uleb128 0x2
 488 0049 04       		.byte	0x4
 489 004a 07       		.byte	0x7
 490 004b D4000000 		.4byte	.LASF5
 491 004f 02       		.uleb128 0x2
 492 0050 08       		.byte	0x8
 493 0051 05       		.byte	0x5
 494 0052 00000000 		.4byte	.LASF6
 495 0056 02       		.uleb128 0x2
 496 0057 08       		.byte	0x8
 497 0058 07       		.byte	0x7
 498 0059 AA010000 		.4byte	.LASF7
 499 005d 03       		.uleb128 0x3
 500 005e 04       		.byte	0x4
 501 005f 05       		.byte	0x5
 502 0060 696E7400 		.ascii	"int\000"
 503 0064 02       		.uleb128 0x2
 504 0065 04       		.byte	0x4
 505 0066 07       		.byte	0x7
 506 0067 95010000 		.4byte	.LASF8
 507 006b 04       		.uleb128 0x4
 508 006c 6F010000 		.4byte	.LASF9
 509 0070 02       		.byte	0x2
 510 0071 BA01     		.2byte	0x1ba
 511 0073 3A000000 		.4byte	0x3a
 512 0077 04       		.uleb128 0x4
 513 0078 8E010000 		.4byte	.LASF10
 514 007c 02       		.byte	0x2
 515 007d BB01     		.2byte	0x1bb
 516 007f 48000000 		.4byte	0x48
 517 0083 02       		.uleb128 0x2
 518 0084 04       		.byte	0x4
 519 0085 04       		.byte	0x4
 520 0086 A8000000 		.4byte	.LASF11
 521 008a 02       		.uleb128 0x2
 522 008b 08       		.byte	0x8
 523 008c 04       		.byte	0x4
 524 008d 38010000 		.4byte	.LASF12
 525 0091 04       		.uleb128 0x4
 526 0092 CE000000 		.4byte	.LASF13
 527 0096 02       		.byte	0x2
 528 0097 CA01     		.2byte	0x1ca
 529 0099 9D000000 		.4byte	0x9d
 530 009d 02       		.uleb128 0x2
 531 009e 01       		.byte	0x1
 532 009f 08       		.byte	0x8
 533 00a0 1F020000 		.4byte	.LASF14
 534 00a4 04       		.uleb128 0x4
 535 00a5 0E000000 		.4byte	.LASF15
 536 00a9 02       		.byte	0x2
 537 00aa 6502     		.2byte	0x265
 538 00ac B0000000 		.4byte	0xb0
 539 00b0 05       		.uleb128 0x5
 540 00b1 77000000 		.4byte	0x77
 541 00b5 02       		.uleb128 0x2
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 23


 542 00b6 04       		.byte	0x4
 543 00b7 07       		.byte	0x7
 544 00b8 0B020000 		.4byte	.LASF16
 545 00bc 06       		.uleb128 0x6
 546 00bd BC020000 		.4byte	.LASF17
 547 00c1 01       		.byte	0x1
 548 00c2 F5       		.byte	0xf5
 549 00c3 00000000 		.4byte	.LFB0
 550 00c7 9C000000 		.4byte	.LFE0-.LFB0
 551 00cb 01       		.uleb128 0x1
 552 00cc 9C       		.byte	0x9c
 553 00cd 07       		.uleb128 0x7
 554 00ce 3F010000 		.4byte	.LASF18
 555 00d2 01       		.byte	0x1
 556 00d3 3B01     		.2byte	0x13b
 557 00d5 00000000 		.4byte	.LFB1
 558 00d9 2C000000 		.4byte	.LFE1-.LFB1
 559 00dd 01       		.uleb128 0x1
 560 00de 9C       		.byte	0x9c
 561 00df 07       		.uleb128 0x7
 562 00e0 91000000 		.4byte	.LASF19
 563 00e4 01       		.byte	0x1
 564 00e5 6F01     		.2byte	0x16f
 565 00e7 00000000 		.4byte	.LFB2
 566 00eb 2C000000 		.4byte	.LFE2-.LFB2
 567 00ef 01       		.uleb128 0x1
 568 00f0 9C       		.byte	0x9c
 569 00f1 08       		.uleb128 0x8
 570 00f2 76010000 		.4byte	.LASF20
 571 00f6 01       		.byte	0x1
 572 00f7 AF01     		.2byte	0x1af
 573 00f9 00000000 		.4byte	.LFB3
 574 00fd 14000000 		.4byte	.LFE3-.LFB3
 575 0101 01       		.uleb128 0x1
 576 0102 9C       		.byte	0x9c
 577 0103 28010000 		.4byte	0x128
 578 0107 09       		.uleb128 0x9
 579 0108 A2010000 		.4byte	.LASF22
 580 010c 01       		.byte	0x1
 581 010d AF01     		.2byte	0x1af
 582 010f 77000000 		.4byte	0x77
 583 0113 00000000 		.4byte	.LLST0
 584 0117 0A       		.uleb128 0xa
 585 0118 DF020000 		.4byte	.LASF24
 586 011c 01       		.byte	0x1
 587 011d B101     		.2byte	0x1b1
 588 011f 77000000 		.4byte	0x77
 589 0123 21000000 		.4byte	.LLST1
 590 0127 00       		.byte	0
 591 0128 08       		.uleb128 0x8
 592 0129 EF010000 		.4byte	.LASF21
 593 012d 01       		.byte	0x1
 594 012e C801     		.2byte	0x1c8
 595 0130 00000000 		.4byte	.LFB4
 596 0134 18000000 		.4byte	.LFE4-.LFB4
 597 0138 01       		.uleb128 0x1
 598 0139 9C       		.byte	0x9c
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 24


 599 013a 5F010000 		.4byte	0x15f
 600 013e 09       		.uleb128 0x9
 601 013f C1010000 		.4byte	.LASF23
 602 0143 01       		.byte	0x1
 603 0144 C801     		.2byte	0x1c8
 604 0146 77000000 		.4byte	0x77
 605 014a 3F000000 		.4byte	.LLST2
 606 014e 0A       		.uleb128 0xa
 607 014f DF020000 		.4byte	.LASF24
 608 0153 01       		.byte	0x1
 609 0154 CA01     		.2byte	0x1ca
 610 0156 77000000 		.4byte	0x77
 611 015a 60000000 		.4byte	.LLST3
 612 015e 00       		.byte	0
 613 015f 0B       		.uleb128 0xb
 614 0160 F9000000 		.4byte	.LASF26
 615 0164 01       		.byte	0x1
 616 0165 F001     		.2byte	0x1f0
 617 0167 77000000 		.4byte	0x77
 618 016b 00000000 		.4byte	.LFB5
 619 016f 2C000000 		.4byte	.LFE5-.LFB5
 620 0173 01       		.uleb128 0x1
 621 0174 9C       		.byte	0x9c
 622 0175 9C010000 		.4byte	0x19c
 623 0179 0A       		.uleb128 0xa
 624 017a 0C010000 		.4byte	.LASF25
 625 017e 01       		.byte	0x1
 626 017f F201     		.2byte	0x1f2
 627 0181 77000000 		.4byte	0x77
 628 0185 89000000 		.4byte	.LLST4
 629 0189 0C       		.uleb128 0xc
 630 018a 06000000 		.4byte	.LVL11
 631 018e 9D020000 		.4byte	0x29d
 632 0192 0C       		.uleb128 0xc
 633 0193 0E000000 		.4byte	.LVL12
 634 0197 A9020000 		.4byte	0x2a9
 635 019b 00       		.byte	0
 636 019c 0B       		.uleb128 0xb
 637 019d F4020000 		.4byte	.LASF27
 638 01a1 01       		.byte	0x1
 639 01a2 2202     		.2byte	0x222
 640 01a4 77000000 		.4byte	0x77
 641 01a8 00000000 		.4byte	.LFB6
 642 01ac 30000000 		.4byte	.LFE6-.LFB6
 643 01b0 01       		.uleb128 0x1
 644 01b1 9C       		.byte	0x9c
 645 01b2 E9010000 		.4byte	0x1e9
 646 01b6 0A       		.uleb128 0xa
 647 01b7 0C010000 		.4byte	.LASF25
 648 01bb 01       		.byte	0x1
 649 01bc 2402     		.2byte	0x224
 650 01be 77000000 		.4byte	0x77
 651 01c2 D6000000 		.4byte	.LLST5
 652 01c6 0A       		.uleb128 0xa
 653 01c7 D5020000 		.4byte	.LASF28
 654 01cb 01       		.byte	0x1
 655 01cc 2502     		.2byte	0x225
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 25


 656 01ce 77000000 		.4byte	0x77
 657 01d2 F4000000 		.4byte	.LLST6
 658 01d6 0C       		.uleb128 0xc
 659 01d7 06000000 		.4byte	.LVL17
 660 01db 9D020000 		.4byte	0x29d
 661 01df 0C       		.uleb128 0xc
 662 01e0 0E000000 		.4byte	.LVL18
 663 01e4 A9020000 		.4byte	0x2a9
 664 01e8 00       		.byte	0
 665 01e9 08       		.uleb128 0x8
 666 01ea 5E000000 		.4byte	.LASF29
 667 01ee 01       		.byte	0x1
 668 01ef A602     		.2byte	0x2a6
 669 01f1 00000000 		.4byte	.LFB7
 670 01f5 16000000 		.4byte	.LFE7-.LFB7
 671 01f9 01       		.uleb128 0x1
 672 01fa 9C       		.byte	0x9c
 673 01fb 29020000 		.4byte	0x229
 674 01ff 09       		.uleb128 0x9
 675 0200 A1000000 		.4byte	.LASF30
 676 0204 01       		.byte	0x1
 677 0205 A602     		.2byte	0x2a6
 678 0207 29020000 		.4byte	0x229
 679 020b 07010000 		.4byte	.LLST7
 680 020f 0A       		.uleb128 0xa
 681 0210 E6010000 		.4byte	.LASF31
 682 0214 01       		.byte	0x1
 683 0215 A802     		.2byte	0x2a8
 684 0217 77000000 		.4byte	0x77
 685 021b 33010000 		.4byte	.LLST8
 686 021f 0C       		.uleb128 0xc
 687 0220 0C000000 		.4byte	.LVL27
 688 0224 B5020000 		.4byte	0x2b5
 689 0228 00       		.byte	0
 690 0229 0D       		.uleb128 0xd
 691 022a 04       		.byte	0x4
 692 022b 2F020000 		.4byte	0x22f
 693 022f 0E       		.uleb128 0xe
 694 0230 91000000 		.4byte	0x91
 695 0234 08       		.uleb128 0x8
 696 0235 4B000000 		.4byte	.LASF32
 697 0239 01       		.byte	0x1
 698 023a C102     		.2byte	0x2c1
 699 023c 00000000 		.4byte	.LFB8
 700 0240 14000000 		.4byte	.LFE8-.LFB8
 701 0244 01       		.uleb128 0x1
 702 0245 9C       		.byte	0x9c
 703 0246 92020000 		.4byte	0x292
 704 024a 09       		.uleb128 0x9
 705 024b 14020000 		.4byte	.LASF33
 706 024f 01       		.byte	0x1
 707 0250 C102     		.2byte	0x2c1
 708 0252 77000000 		.4byte	0x77
 709 0256 52010000 		.4byte	.LLST9
 710 025a 0F       		.uleb128 0xf
 711 025b 06000000 		.4byte	.LVL32
 712 025f B5020000 		.4byte	0x2b5
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 26


 713 0263 6F020000 		.4byte	0x26f
 714 0267 10       		.uleb128 0x10
 715 0268 01       		.uleb128 0x1
 716 0269 50       		.byte	0x50
 717 026a 03       		.uleb128 0x3
 718 026b F3       		.byte	0xf3
 719 026c 01       		.uleb128 0x1
 720 026d 50       		.byte	0x50
 721 026e 00       		.byte	0
 722 026f 0F       		.uleb128 0xf
 723 0270 0C000000 		.4byte	.LVL33
 724 0274 B5020000 		.4byte	0x2b5
 725 0278 82020000 		.4byte	0x282
 726 027c 10       		.uleb128 0x10
 727 027d 01       		.uleb128 0x1
 728 027e 50       		.byte	0x50
 729 027f 01       		.uleb128 0x1
 730 0280 3D       		.byte	0x3d
 731 0281 00       		.byte	0
 732 0282 11       		.uleb128 0x11
 733 0283 12000000 		.4byte	.LVL34
 734 0287 B5020000 		.4byte	0x2b5
 735 028b 10       		.uleb128 0x10
 736 028c 01       		.uleb128 0x1
 737 028d 50       		.byte	0x50
 738 028e 01       		.uleb128 0x1
 739 028f 3A       		.byte	0x3a
 740 0290 00       		.byte	0
 741 0291 00       		.byte	0
 742 0292 12       		.uleb128 0x12
 743 0293 BC000000 		.4byte	.LASF39
 744 0297 04       		.byte	0x4
 745 0298 5B       		.byte	0x5b
 746 0299 6B000000 		.4byte	0x6b
 747 029d 13       		.uleb128 0x13
 748 029e 73000000 		.4byte	.LASF34
 749 02a2 03       		.byte	0x3
 750 02a3 3403     		.2byte	0x334
 751 02a5 77000000 		.4byte	0x77
 752 02a9 13       		.uleb128 0x13
 753 02aa CD010000 		.4byte	.LASF35
 754 02ae 03       		.byte	0x3
 755 02af 3303     		.2byte	0x333
 756 02b1 77000000 		.4byte	0x77
 757 02b5 14       		.uleb128 0x14
 758 02b6 55010000 		.4byte	.LASF40
 759 02ba 03       		.byte	0x3
 760 02bb 3A03     		.2byte	0x33a
 761 02bd 15       		.uleb128 0x15
 762 02be 77000000 		.4byte	0x77
 763 02c2 00       		.byte	0
 764 02c3 00       		.byte	0
 765              		.section	.debug_abbrev,"",%progbits
 766              	.Ldebug_abbrev0:
 767 0000 01       		.uleb128 0x1
 768 0001 11       		.uleb128 0x11
 769 0002 01       		.byte	0x1
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 27


 770 0003 25       		.uleb128 0x25
 771 0004 0E       		.uleb128 0xe
 772 0005 13       		.uleb128 0x13
 773 0006 0B       		.uleb128 0xb
 774 0007 03       		.uleb128 0x3
 775 0008 0E       		.uleb128 0xe
 776 0009 1B       		.uleb128 0x1b
 777 000a 0E       		.uleb128 0xe
 778 000b 55       		.uleb128 0x55
 779 000c 17       		.uleb128 0x17
 780 000d 11       		.uleb128 0x11
 781 000e 01       		.uleb128 0x1
 782 000f 10       		.uleb128 0x10
 783 0010 17       		.uleb128 0x17
 784 0011 00       		.byte	0
 785 0012 00       		.byte	0
 786 0013 02       		.uleb128 0x2
 787 0014 24       		.uleb128 0x24
 788 0015 00       		.byte	0
 789 0016 0B       		.uleb128 0xb
 790 0017 0B       		.uleb128 0xb
 791 0018 3E       		.uleb128 0x3e
 792 0019 0B       		.uleb128 0xb
 793 001a 03       		.uleb128 0x3
 794 001b 0E       		.uleb128 0xe
 795 001c 00       		.byte	0
 796 001d 00       		.byte	0
 797 001e 03       		.uleb128 0x3
 798 001f 24       		.uleb128 0x24
 799 0020 00       		.byte	0
 800 0021 0B       		.uleb128 0xb
 801 0022 0B       		.uleb128 0xb
 802 0023 3E       		.uleb128 0x3e
 803 0024 0B       		.uleb128 0xb
 804 0025 03       		.uleb128 0x3
 805 0026 08       		.uleb128 0x8
 806 0027 00       		.byte	0
 807 0028 00       		.byte	0
 808 0029 04       		.uleb128 0x4
 809 002a 16       		.uleb128 0x16
 810 002b 00       		.byte	0
 811 002c 03       		.uleb128 0x3
 812 002d 0E       		.uleb128 0xe
 813 002e 3A       		.uleb128 0x3a
 814 002f 0B       		.uleb128 0xb
 815 0030 3B       		.uleb128 0x3b
 816 0031 05       		.uleb128 0x5
 817 0032 49       		.uleb128 0x49
 818 0033 13       		.uleb128 0x13
 819 0034 00       		.byte	0
 820 0035 00       		.byte	0
 821 0036 05       		.uleb128 0x5
 822 0037 35       		.uleb128 0x35
 823 0038 00       		.byte	0
 824 0039 49       		.uleb128 0x49
 825 003a 13       		.uleb128 0x13
 826 003b 00       		.byte	0
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 28


 827 003c 00       		.byte	0
 828 003d 06       		.uleb128 0x6
 829 003e 2E       		.uleb128 0x2e
 830 003f 00       		.byte	0
 831 0040 3F       		.uleb128 0x3f
 832 0041 19       		.uleb128 0x19
 833 0042 03       		.uleb128 0x3
 834 0043 0E       		.uleb128 0xe
 835 0044 3A       		.uleb128 0x3a
 836 0045 0B       		.uleb128 0xb
 837 0046 3B       		.uleb128 0x3b
 838 0047 0B       		.uleb128 0xb
 839 0048 27       		.uleb128 0x27
 840 0049 19       		.uleb128 0x19
 841 004a 11       		.uleb128 0x11
 842 004b 01       		.uleb128 0x1
 843 004c 12       		.uleb128 0x12
 844 004d 06       		.uleb128 0x6
 845 004e 40       		.uleb128 0x40
 846 004f 18       		.uleb128 0x18
 847 0050 9742     		.uleb128 0x2117
 848 0052 19       		.uleb128 0x19
 849 0053 00       		.byte	0
 850 0054 00       		.byte	0
 851 0055 07       		.uleb128 0x7
 852 0056 2E       		.uleb128 0x2e
 853 0057 00       		.byte	0
 854 0058 3F       		.uleb128 0x3f
 855 0059 19       		.uleb128 0x19
 856 005a 03       		.uleb128 0x3
 857 005b 0E       		.uleb128 0xe
 858 005c 3A       		.uleb128 0x3a
 859 005d 0B       		.uleb128 0xb
 860 005e 3B       		.uleb128 0x3b
 861 005f 05       		.uleb128 0x5
 862 0060 27       		.uleb128 0x27
 863 0061 19       		.uleb128 0x19
 864 0062 11       		.uleb128 0x11
 865 0063 01       		.uleb128 0x1
 866 0064 12       		.uleb128 0x12
 867 0065 06       		.uleb128 0x6
 868 0066 40       		.uleb128 0x40
 869 0067 18       		.uleb128 0x18
 870 0068 9742     		.uleb128 0x2117
 871 006a 19       		.uleb128 0x19
 872 006b 00       		.byte	0
 873 006c 00       		.byte	0
 874 006d 08       		.uleb128 0x8
 875 006e 2E       		.uleb128 0x2e
 876 006f 01       		.byte	0x1
 877 0070 3F       		.uleb128 0x3f
 878 0071 19       		.uleb128 0x19
 879 0072 03       		.uleb128 0x3
 880 0073 0E       		.uleb128 0xe
 881 0074 3A       		.uleb128 0x3a
 882 0075 0B       		.uleb128 0xb
 883 0076 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 29


 884 0077 05       		.uleb128 0x5
 885 0078 27       		.uleb128 0x27
 886 0079 19       		.uleb128 0x19
 887 007a 11       		.uleb128 0x11
 888 007b 01       		.uleb128 0x1
 889 007c 12       		.uleb128 0x12
 890 007d 06       		.uleb128 0x6
 891 007e 40       		.uleb128 0x40
 892 007f 18       		.uleb128 0x18
 893 0080 9742     		.uleb128 0x2117
 894 0082 19       		.uleb128 0x19
 895 0083 01       		.uleb128 0x1
 896 0084 13       		.uleb128 0x13
 897 0085 00       		.byte	0
 898 0086 00       		.byte	0
 899 0087 09       		.uleb128 0x9
 900 0088 05       		.uleb128 0x5
 901 0089 00       		.byte	0
 902 008a 03       		.uleb128 0x3
 903 008b 0E       		.uleb128 0xe
 904 008c 3A       		.uleb128 0x3a
 905 008d 0B       		.uleb128 0xb
 906 008e 3B       		.uleb128 0x3b
 907 008f 05       		.uleb128 0x5
 908 0090 49       		.uleb128 0x49
 909 0091 13       		.uleb128 0x13
 910 0092 02       		.uleb128 0x2
 911 0093 17       		.uleb128 0x17
 912 0094 00       		.byte	0
 913 0095 00       		.byte	0
 914 0096 0A       		.uleb128 0xa
 915 0097 34       		.uleb128 0x34
 916 0098 00       		.byte	0
 917 0099 03       		.uleb128 0x3
 918 009a 0E       		.uleb128 0xe
 919 009b 3A       		.uleb128 0x3a
 920 009c 0B       		.uleb128 0xb
 921 009d 3B       		.uleb128 0x3b
 922 009e 05       		.uleb128 0x5
 923 009f 49       		.uleb128 0x49
 924 00a0 13       		.uleb128 0x13
 925 00a1 02       		.uleb128 0x2
 926 00a2 17       		.uleb128 0x17
 927 00a3 00       		.byte	0
 928 00a4 00       		.byte	0
 929 00a5 0B       		.uleb128 0xb
 930 00a6 2E       		.uleb128 0x2e
 931 00a7 01       		.byte	0x1
 932 00a8 3F       		.uleb128 0x3f
 933 00a9 19       		.uleb128 0x19
 934 00aa 03       		.uleb128 0x3
 935 00ab 0E       		.uleb128 0xe
 936 00ac 3A       		.uleb128 0x3a
 937 00ad 0B       		.uleb128 0xb
 938 00ae 3B       		.uleb128 0x3b
 939 00af 05       		.uleb128 0x5
 940 00b0 27       		.uleb128 0x27
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 30


 941 00b1 19       		.uleb128 0x19
 942 00b2 49       		.uleb128 0x49
 943 00b3 13       		.uleb128 0x13
 944 00b4 11       		.uleb128 0x11
 945 00b5 01       		.uleb128 0x1
 946 00b6 12       		.uleb128 0x12
 947 00b7 06       		.uleb128 0x6
 948 00b8 40       		.uleb128 0x40
 949 00b9 18       		.uleb128 0x18
 950 00ba 9742     		.uleb128 0x2117
 951 00bc 19       		.uleb128 0x19
 952 00bd 01       		.uleb128 0x1
 953 00be 13       		.uleb128 0x13
 954 00bf 00       		.byte	0
 955 00c0 00       		.byte	0
 956 00c1 0C       		.uleb128 0xc
 957 00c2 898201   		.uleb128 0x4109
 958 00c5 00       		.byte	0
 959 00c6 11       		.uleb128 0x11
 960 00c7 01       		.uleb128 0x1
 961 00c8 31       		.uleb128 0x31
 962 00c9 13       		.uleb128 0x13
 963 00ca 00       		.byte	0
 964 00cb 00       		.byte	0
 965 00cc 0D       		.uleb128 0xd
 966 00cd 0F       		.uleb128 0xf
 967 00ce 00       		.byte	0
 968 00cf 0B       		.uleb128 0xb
 969 00d0 0B       		.uleb128 0xb
 970 00d1 49       		.uleb128 0x49
 971 00d2 13       		.uleb128 0x13
 972 00d3 00       		.byte	0
 973 00d4 00       		.byte	0
 974 00d5 0E       		.uleb128 0xe
 975 00d6 26       		.uleb128 0x26
 976 00d7 00       		.byte	0
 977 00d8 49       		.uleb128 0x49
 978 00d9 13       		.uleb128 0x13
 979 00da 00       		.byte	0
 980 00db 00       		.byte	0
 981 00dc 0F       		.uleb128 0xf
 982 00dd 898201   		.uleb128 0x4109
 983 00e0 01       		.byte	0x1
 984 00e1 11       		.uleb128 0x11
 985 00e2 01       		.uleb128 0x1
 986 00e3 31       		.uleb128 0x31
 987 00e4 13       		.uleb128 0x13
 988 00e5 01       		.uleb128 0x1
 989 00e6 13       		.uleb128 0x13
 990 00e7 00       		.byte	0
 991 00e8 00       		.byte	0
 992 00e9 10       		.uleb128 0x10
 993 00ea 8A8201   		.uleb128 0x410a
 994 00ed 00       		.byte	0
 995 00ee 02       		.uleb128 0x2
 996 00ef 18       		.uleb128 0x18
 997 00f0 9142     		.uleb128 0x2111
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 31


 998 00f2 18       		.uleb128 0x18
 999 00f3 00       		.byte	0
 1000 00f4 00       		.byte	0
 1001 00f5 11       		.uleb128 0x11
 1002 00f6 898201   		.uleb128 0x4109
 1003 00f9 01       		.byte	0x1
 1004 00fa 11       		.uleb128 0x11
 1005 00fb 01       		.uleb128 0x1
 1006 00fc 31       		.uleb128 0x31
 1007 00fd 13       		.uleb128 0x13
 1008 00fe 00       		.byte	0
 1009 00ff 00       		.byte	0
 1010 0100 12       		.uleb128 0x12
 1011 0101 34       		.uleb128 0x34
 1012 0102 00       		.byte	0
 1013 0103 03       		.uleb128 0x3
 1014 0104 0E       		.uleb128 0xe
 1015 0105 3A       		.uleb128 0x3a
 1016 0106 0B       		.uleb128 0xb
 1017 0107 3B       		.uleb128 0x3b
 1018 0108 0B       		.uleb128 0xb
 1019 0109 49       		.uleb128 0x49
 1020 010a 13       		.uleb128 0x13
 1021 010b 3F       		.uleb128 0x3f
 1022 010c 19       		.uleb128 0x19
 1023 010d 3C       		.uleb128 0x3c
 1024 010e 19       		.uleb128 0x19
 1025 010f 00       		.byte	0
 1026 0110 00       		.byte	0
 1027 0111 13       		.uleb128 0x13
 1028 0112 2E       		.uleb128 0x2e
 1029 0113 00       		.byte	0
 1030 0114 3F       		.uleb128 0x3f
 1031 0115 19       		.uleb128 0x19
 1032 0116 03       		.uleb128 0x3
 1033 0117 0E       		.uleb128 0xe
 1034 0118 3A       		.uleb128 0x3a
 1035 0119 0B       		.uleb128 0xb
 1036 011a 3B       		.uleb128 0x3b
 1037 011b 05       		.uleb128 0x5
 1038 011c 27       		.uleb128 0x27
 1039 011d 19       		.uleb128 0x19
 1040 011e 49       		.uleb128 0x49
 1041 011f 13       		.uleb128 0x13
 1042 0120 3C       		.uleb128 0x3c
 1043 0121 19       		.uleb128 0x19
 1044 0122 00       		.byte	0
 1045 0123 00       		.byte	0
 1046 0124 14       		.uleb128 0x14
 1047 0125 2E       		.uleb128 0x2e
 1048 0126 01       		.byte	0x1
 1049 0127 3F       		.uleb128 0x3f
 1050 0128 19       		.uleb128 0x19
 1051 0129 03       		.uleb128 0x3
 1052 012a 0E       		.uleb128 0xe
 1053 012b 3A       		.uleb128 0x3a
 1054 012c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 32


 1055 012d 3B       		.uleb128 0x3b
 1056 012e 05       		.uleb128 0x5
 1057 012f 27       		.uleb128 0x27
 1058 0130 19       		.uleb128 0x19
 1059 0131 3C       		.uleb128 0x3c
 1060 0132 19       		.uleb128 0x19
 1061 0133 00       		.byte	0
 1062 0134 00       		.byte	0
 1063 0135 15       		.uleb128 0x15
 1064 0136 05       		.uleb128 0x5
 1065 0137 00       		.byte	0
 1066 0138 49       		.uleb128 0x49
 1067 0139 13       		.uleb128 0x13
 1068 013a 00       		.byte	0
 1069 013b 00       		.byte	0
 1070 013c 00       		.byte	0
 1071              		.section	.debug_loc,"",%progbits
 1072              	.Ldebug_loc0:
 1073              	.LLST0:
 1074 0000 00000000 		.4byte	.LVL0
 1075 0004 0A000000 		.4byte	.LVL3
 1076 0008 0100     		.2byte	0x1
 1077 000a 50       		.byte	0x50
 1078 000b 0A000000 		.4byte	.LVL3
 1079 000f 14000000 		.4byte	.LFE3
 1080 0013 0400     		.2byte	0x4
 1081 0015 F3       		.byte	0xf3
 1082 0016 01       		.uleb128 0x1
 1083 0017 50       		.byte	0x50
 1084 0018 9F       		.byte	0x9f
 1085 0019 00000000 		.4byte	0
 1086 001d 00000000 		.4byte	0
 1087              	.LLST1:
 1088 0021 04000000 		.4byte	.LVL1
 1089 0025 0C000000 		.4byte	.LVL4
 1090 0029 0100     		.2byte	0x1
 1091 002b 53       		.byte	0x53
 1092 002c 0C000000 		.4byte	.LVL4
 1093 0030 14000000 		.4byte	.LFE3
 1094 0034 0100     		.2byte	0x1
 1095 0036 50       		.byte	0x50
 1096 0037 00000000 		.4byte	0
 1097 003b 00000000 		.4byte	0
 1098              	.LLST2:
 1099 003f 00000000 		.4byte	.LVL5
 1100 0043 0A000000 		.4byte	.LVL8
 1101 0047 0100     		.2byte	0x1
 1102 0049 50       		.byte	0x50
 1103 004a 0A000000 		.4byte	.LVL8
 1104 004e 18000000 		.4byte	.LFE4
 1105 0052 0400     		.2byte	0x4
 1106 0054 F3       		.byte	0xf3
 1107 0055 01       		.uleb128 0x1
 1108 0056 50       		.byte	0x50
 1109 0057 9F       		.byte	0x9f
 1110 0058 00000000 		.4byte	0
 1111 005c 00000000 		.4byte	0
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 33


 1112              	.LLST3:
 1113 0060 04000000 		.4byte	.LVL6
 1114 0064 08000000 		.4byte	.LVL7
 1115 0068 0100     		.2byte	0x1
 1116 006a 51       		.byte	0x51
 1117 006b 08000000 		.4byte	.LVL7
 1118 006f 0C000000 		.4byte	.LVL9
 1119 0073 0100     		.2byte	0x1
 1120 0075 53       		.byte	0x53
 1121 0076 0C000000 		.4byte	.LVL9
 1122 007a 18000000 		.4byte	.LFE4
 1123 007e 0100     		.2byte	0x1
 1124 0080 50       		.byte	0x50
 1125 0081 00000000 		.4byte	0
 1126 0085 00000000 		.4byte	0
 1127              	.LLST4:
 1128 0089 02000000 		.4byte	.LVL10
 1129 008d 0E000000 		.4byte	.LVL12
 1130 0091 0200     		.2byte	0x2
 1131 0093 30       		.byte	0x30
 1132 0094 9F       		.byte	0x9f
 1133 0095 0E000000 		.4byte	.LVL12
 1134 0099 10000000 		.4byte	.LVL13
 1135 009d 0100     		.2byte	0x1
 1136 009f 50       		.byte	0x50
 1137 00a0 10000000 		.4byte	.LVL13
 1138 00a4 12000000 		.4byte	.LVL14
 1139 00a8 0200     		.2byte	0x2
 1140 00aa 30       		.byte	0x30
 1141 00ab 9F       		.byte	0x9f
 1142 00ac 12000000 		.4byte	.LVL14
 1143 00b0 1E000000 		.4byte	.LVL15
 1144 00b4 0100     		.2byte	0x1
 1145 00b6 50       		.byte	0x50
 1146 00b7 1E000000 		.4byte	.LVL15
 1147 00bb 26000000 		.4byte	.LVL16
 1148 00bf 0200     		.2byte	0x2
 1149 00c1 30       		.byte	0x30
 1150 00c2 9F       		.byte	0x9f
 1151 00c3 26000000 		.4byte	.LVL16
 1152 00c7 2C000000 		.4byte	.LFE5
 1153 00cb 0100     		.2byte	0x1
 1154 00cd 50       		.byte	0x50
 1155 00ce 00000000 		.4byte	0
 1156 00d2 00000000 		.4byte	0
 1157              	.LLST5:
 1158 00d6 0E000000 		.4byte	.LVL18
 1159 00da 10000000 		.4byte	.LVL19
 1160 00de 0100     		.2byte	0x1
 1161 00e0 50       		.byte	0x50
 1162 00e1 14000000 		.4byte	.LVL20
 1163 00e5 30000000 		.4byte	.LFE6
 1164 00e9 0100     		.2byte	0x1
 1165 00eb 50       		.byte	0x50
 1166 00ec 00000000 		.4byte	0
 1167 00f0 00000000 		.4byte	0
 1168              	.LLST6:
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 34


 1169 00f4 1E000000 		.4byte	.LVL21
 1170 00f8 22000000 		.4byte	.LVL22
 1171 00fc 0100     		.2byte	0x1
 1172 00fe 53       		.byte	0x53
 1173 00ff 00000000 		.4byte	0
 1174 0103 00000000 		.4byte	0
 1175              	.LLST7:
 1176 0107 00000000 		.4byte	.LVL24
 1177 010b 08000000 		.4byte	.LVL26
 1178 010f 0100     		.2byte	0x1
 1179 0111 50       		.byte	0x50
 1180 0112 08000000 		.4byte	.LVL26
 1181 0116 14000000 		.4byte	.LVL30
 1182 011a 0100     		.2byte	0x1
 1183 011c 55       		.byte	0x55
 1184 011d 14000000 		.4byte	.LVL30
 1185 0121 16000000 		.4byte	.LFE7
 1186 0125 0400     		.2byte	0x4
 1187 0127 F3       		.byte	0xf3
 1188 0128 01       		.uleb128 0x1
 1189 0129 50       		.byte	0x50
 1190 012a 9F       		.byte	0x9f
 1191 012b 00000000 		.4byte	0
 1192 012f 00000000 		.4byte	0
 1193              	.LLST8:
 1194 0133 04000000 		.4byte	.LVL25
 1195 0137 08000000 		.4byte	.LVL26
 1196 013b 0200     		.2byte	0x2
 1197 013d 30       		.byte	0x30
 1198 013e 9F       		.byte	0x9f
 1199 013f 08000000 		.4byte	.LVL26
 1200 0143 14000000 		.4byte	.LVL29
 1201 0147 0100     		.2byte	0x1
 1202 0149 54       		.byte	0x54
 1203 014a 00000000 		.4byte	0
 1204 014e 00000000 		.4byte	0
 1205              	.LLST9:
 1206 0152 00000000 		.4byte	.LVL31
 1207 0156 05000000 		.4byte	.LVL32-1
 1208 015a 0100     		.2byte	0x1
 1209 015c 50       		.byte	0x50
 1210 015d 05000000 		.4byte	.LVL32-1
 1211 0161 14000000 		.4byte	.LFE8
 1212 0165 0400     		.2byte	0x4
 1213 0167 F3       		.byte	0xf3
 1214 0168 01       		.uleb128 0x1
 1215 0169 50       		.byte	0x50
 1216 016a 9F       		.byte	0x9f
 1217 016b 00000000 		.4byte	0
 1218 016f 00000000 		.4byte	0
 1219              		.section	.debug_aranges,"",%progbits
 1220 0000 5C000000 		.4byte	0x5c
 1221 0004 0200     		.2byte	0x2
 1222 0006 00000000 		.4byte	.Ldebug_info0
 1223 000a 04       		.byte	0x4
 1224 000b 00       		.byte	0
 1225 000c 0000     		.2byte	0
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 35


 1226 000e 0000     		.2byte	0
 1227 0010 00000000 		.4byte	.LFB0
 1228 0014 9C000000 		.4byte	.LFE0-.LFB0
 1229 0018 00000000 		.4byte	.LFB1
 1230 001c 2C000000 		.4byte	.LFE1-.LFB1
 1231 0020 00000000 		.4byte	.LFB2
 1232 0024 2C000000 		.4byte	.LFE2-.LFB2
 1233 0028 00000000 		.4byte	.LFB3
 1234 002c 14000000 		.4byte	.LFE3-.LFB3
 1235 0030 00000000 		.4byte	.LFB4
 1236 0034 18000000 		.4byte	.LFE4-.LFB4
 1237 0038 00000000 		.4byte	.LFB5
 1238 003c 2C000000 		.4byte	.LFE5-.LFB5
 1239 0040 00000000 		.4byte	.LFB6
 1240 0044 30000000 		.4byte	.LFE6-.LFB6
 1241 0048 00000000 		.4byte	.LFB7
 1242 004c 16000000 		.4byte	.LFE7-.LFB7
 1243 0050 00000000 		.4byte	.LFB8
 1244 0054 14000000 		.4byte	.LFE8-.LFB8
 1245 0058 00000000 		.4byte	0
 1246 005c 00000000 		.4byte	0
 1247              		.section	.debug_ranges,"",%progbits
 1248              	.Ldebug_ranges0:
 1249 0000 00000000 		.4byte	.LFB0
 1250 0004 9C000000 		.4byte	.LFE0
 1251 0008 00000000 		.4byte	.LFB1
 1252 000c 2C000000 		.4byte	.LFE1
 1253 0010 00000000 		.4byte	.LFB2
 1254 0014 2C000000 		.4byte	.LFE2
 1255 0018 00000000 		.4byte	.LFB3
 1256 001c 14000000 		.4byte	.LFE3
 1257 0020 00000000 		.4byte	.LFB4
 1258 0024 18000000 		.4byte	.LFE4
 1259 0028 00000000 		.4byte	.LFB5
 1260 002c 2C000000 		.4byte	.LFE5
 1261 0030 00000000 		.4byte	.LFB6
 1262 0034 30000000 		.4byte	.LFE6
 1263 0038 00000000 		.4byte	.LFB7
 1264 003c 16000000 		.4byte	.LFE7
 1265 0040 00000000 		.4byte	.LFB8
 1266 0044 14000000 		.4byte	.LFE8
 1267 0048 00000000 		.4byte	0
 1268 004c 00000000 		.4byte	0
 1269              		.section	.debug_line,"",%progbits
 1270              	.Ldebug_line0:
 1271 0000 4E010000 		.section	.debug_str,"MS",%progbits,1
 1271      02006D00 
 1271      00000201 
 1271      FB0E0D00 
 1271      01010101 
 1272              	.LASF6:
 1273 0000 6C6F6E67 		.ascii	"long long int\000"
 1273      206C6F6E 
 1273      6720696E 
 1273      7400
 1274              	.LASF15:
 1275 000e 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 36


 1275      3200
 1276              	.LASF38:
 1277 0014 443A5C77 		.ascii	"D:\\workspace_SeniorDeisgn\\PSoC\\SD1\\Senior_Desig"
 1277      6F726B73 
 1277      70616365 
 1277      5F53656E 
 1277      696F7244 
 1278 0043 6E2E6379 		.ascii	"n.cydsn\000"
 1278      64736E00 
 1279              	.LASF32:
 1280 004b 55415254 		.ascii	"UART_1_UartPutCRLF\000"
 1280      5F315F55 
 1280      61727450 
 1280      75744352 
 1280      4C4600
 1281              	.LASF29:
 1282 005e 55415254 		.ascii	"UART_1_UartPutString\000"
 1282      5F315F55 
 1282      61727450 
 1282      75745374 
 1282      72696E67 
 1283              	.LASF34:
 1284 0073 55415254 		.ascii	"UART_1_SpiUartGetRxBufferSize\000"
 1284      5F315F53 
 1284      70695561 
 1284      72744765 
 1284      74527842 
 1285              	.LASF19:
 1286 0091 55415254 		.ascii	"UART_1_UartStop\000"
 1286      5F315F55 
 1286      61727453 
 1286      746F7000 
 1287              	.LASF30:
 1288 00a1 73747269 		.ascii	"string\000"
 1288      6E6700
 1289              	.LASF11:
 1290 00a8 666C6F61 		.ascii	"float\000"
 1290      7400
 1291              	.LASF1:
 1292 00ae 756E7369 		.ascii	"unsigned char\000"
 1292      676E6564 
 1292      20636861 
 1292      7200
 1293              	.LASF39:
 1294 00bc 55415254 		.ascii	"UART_1_IntrTxMask\000"
 1294      5F315F49 
 1294      6E747254 
 1294      784D6173 
 1294      6B00
 1295              	.LASF13:
 1296 00ce 63686172 		.ascii	"char8\000"
 1296      3800
 1297              	.LASF5:
 1298 00d4 6C6F6E67 		.ascii	"long unsigned int\000"
 1298      20756E73 
 1298      69676E65 
 1298      6420696E 
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 37


 1298      7400
 1299              	.LASF3:
 1300 00e6 73686F72 		.ascii	"short unsigned int\000"
 1300      7420756E 
 1300      7369676E 
 1300      65642069 
 1300      6E7400
 1301              	.LASF26:
 1302 00f9 55415254 		.ascii	"UART_1_UartGetChar\000"
 1302      5F315F55 
 1302      61727447 
 1302      65744368 
 1302      617200
 1303              	.LASF25:
 1304 010c 72784461 		.ascii	"rxData\000"
 1304      746100
 1305              	.LASF37:
 1306 0113 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1_UART.c\000"
 1306      72617465 
 1306      645F536F 
 1306      75726365 
 1306      5C50536F 
 1307              	.LASF12:
 1308 0138 646F7562 		.ascii	"double\000"
 1308      6C6500
 1309              	.LASF18:
 1310 013f 55415254 		.ascii	"UART_1_UartPostEnable\000"
 1310      5F315F55 
 1310      61727450 
 1310      6F737445 
 1310      6E61626C 
 1311              	.LASF40:
 1312 0155 55415254 		.ascii	"UART_1_SpiUartWriteTxData\000"
 1312      5F315F53 
 1312      70695561 
 1312      72745772 
 1312      69746554 
 1313              	.LASF9:
 1314 016f 75696E74 		.ascii	"uint16\000"
 1314      313600
 1315              	.LASF20:
 1316 0176 55415254 		.ascii	"UART_1_UartSetRxAddress\000"
 1316      5F315F55 
 1316      61727453 
 1316      65745278 
 1316      41646472 
 1317              	.LASF10:
 1318 018e 75696E74 		.ascii	"uint32\000"
 1318      333200
 1319              	.LASF8:
 1320 0195 756E7369 		.ascii	"unsigned int\000"
 1320      676E6564 
 1320      20696E74 
 1320      00
 1321              	.LASF22:
 1322 01a2 61646472 		.ascii	"address\000"
 1322      65737300 
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 38


 1323              	.LASF7:
 1324 01aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1324      206C6F6E 
 1324      6720756E 
 1324      7369676E 
 1324      65642069 
 1325              	.LASF23:
 1326 01c1 61646472 		.ascii	"addressMask\000"
 1326      6573734D 
 1326      61736B00 
 1327              	.LASF35:
 1328 01cd 55415254 		.ascii	"UART_1_SpiUartReadRxData\000"
 1328      5F315F53 
 1328      70695561 
 1328      72745265 
 1328      61645278 
 1329              	.LASF31:
 1330 01e6 62756649 		.ascii	"bufIndex\000"
 1330      6E646578 
 1330      00
 1331              	.LASF21:
 1332 01ef 55415254 		.ascii	"UART_1_UartSetRxAddressMask\000"
 1332      5F315F55 
 1332      61727453 
 1332      65745278 
 1332      41646472 
 1333              	.LASF16:
 1334 020b 73697A65 		.ascii	"sizetype\000"
 1334      74797065 
 1334      00
 1335              	.LASF33:
 1336 0214 74784461 		.ascii	"txDataByte\000"
 1336      74614279 
 1336      746500
 1337              	.LASF14:
 1338 021f 63686172 		.ascii	"char\000"
 1338      00
 1339              	.LASF36:
 1340 0224 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1340      4320342E 
 1340      392E3320 
 1340      32303135 
 1340      30333033 
 1341 0257 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1341      20726576 
 1341      6973696F 
 1341      6E203232 
 1341      31323230 
 1342 028a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1342      66756E63 
 1342      74696F6E 
 1342      2D736563 
 1342      74696F6E 
 1343              	.LASF2:
 1344 02b2 73686F72 		.ascii	"short int\000"
 1344      7420696E 
 1344      7400
ARM GAS  C:\Users\Feiyang\AppData\Local\Temp\ccIBMbff.s 			page 39


 1345              	.LASF17:
 1346 02bc 55415254 		.ascii	"UART_1_UartInit\000"
 1346      5F315F55 
 1346      61727449 
 1346      6E697400 
 1347              	.LASF4:
 1348 02cc 6C6F6E67 		.ascii	"long int\000"
 1348      20696E74 
 1348      00
 1349              	.LASF28:
 1350 02d5 746D7053 		.ascii	"tmpStatus\000"
 1350      74617475 
 1350      7300
 1351              	.LASF24:
 1352 02df 6D617463 		.ascii	"matchReg\000"
 1352      68526567 
 1352      00
 1353              	.LASF0:
 1354 02e8 7369676E 		.ascii	"signed char\000"
 1354      65642063 
 1354      68617200 
 1355              	.LASF27:
 1356 02f4 55415254 		.ascii	"UART_1_UartGetByte\000"
 1356      5F315F55 
 1356      61727447 
 1356      65744279 
 1356      746500
 1357              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
